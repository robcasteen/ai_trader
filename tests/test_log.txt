DEBUG    tzlocal:unix.py:61 /etc/timezone found, contents:
 America/Chicago

DEBUG    tzlocal:unix.py:120 /etc/localtime found
DEBUG    tzlocal:unix.py:136 2 found:
 {'/etc/timezone': 'America/Chicago', '/etc/localtime is a symlink to': 'America/Chicago'}
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/summary "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/summary "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/current "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/current "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/history "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/history?limit=5 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/history?symbol=BTC/USD "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/history?limit=invalid "HTTP/1.1 400 Bad Request"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/history?limit=5000 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance?lookback_days=30 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance?lookback_days=invalid "HTTP/1.1 400 Bad Request"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance?lookback_days=365 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance/technical "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance/nonexistent "HTTP/1.1 404 Not Found"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/correlation "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/correlation "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/signals/latest "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/signals/latest "HTTP/1.1 404 Not Found"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
ERROR    root:dashboard.py:555 [API] Error in get_strategy_summary: Simulated error
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/summary "HTTP/1.1 500 Internal Server Error"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
ERROR    root:dashboard.py:310 [API] Error in get_current_signals: Simulated error
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/current "HTTP/1.1 500 Internal Server Error"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
ERROR    root:dashboard.py:352 [API] Error in get_signal_history: Simulated error
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/history "HTTP/1.1 500 Internal Server Error"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
ERROR    root:dashboard.py:400 [API] Error in get_strategy_performance: Simulated error
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance "HTTP/1.1 500 Internal Server Error"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
ERROR    root:dashboard.py:449 [API] Error in get_single_strategy_performance: Simulated error
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance/technical "HTTP/1.1 500 Internal Server Error"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
ERROR    root:dashboard.py:491 [API] Error in get_strategy_correlation: Simulated error
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/correlation "HTTP/1.1 500 Internal Server Error"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
ERROR    root:dashboard.py:590 [API] Error in get_latest_signal: Simulated error
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/signals/latest "HTTP/1.1 500 Internal Server Error"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/summary "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/current "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/history "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance/technical "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/correlation "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/signals/latest "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/ "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/ "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/partial "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/partial "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:125 [PnL] Labels: ['BTC/USD']
INFO     root:dashboard.py:126 [PnL] Data: [200.0]
INFO     root:dashboard.py:125 [PnL] Labels: ['BTC/USD']
INFO     root:dashboard.py:126 [PnL] Data: [200.0]
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/partial "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/status "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/status "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/status "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/status "HTTP/1.1 200 OK"
INFO     root:dashboard.py:125 [PnL] Labels: ['ETH/USD', 'AAVE/USD', 'XLM/USD', 'BTC/USD', 'DOGE/USD', 'XRP/USD', 'SOL/USD', 'LTC/USD', 'LINK/USD']
INFO     root:dashboard.py:126 [PnL] Data: [-6.36, 0.0, 0.0, 88.74, 0.0, 0.0, 0.02, 0.0, 0.0]
INFO     root:dashboard.py:125 [PnL] Labels: ['ETH/USD', 'AAVE/USD', 'XLM/USD', 'BTC/USD', 'DOGE/USD', 'XRP/USD', 'SOL/USD', 'LTC/USD', 'LINK/USD']
INFO     root:dashboard.py:126 [PnL] Data: [-6.36, 0.0, 0.0, 88.74, 0.0, 0.0, 0.02, 0.0, 0.0]
INFO     root:dashboard.py:125 [PnL] Labels: ['ETH/USD', 'AAVE/USD', 'XLM/USD', 'BTC/USD', 'DOGE/USD', 'XRP/USD', 'SOL/USD', 'LTC/USD', 'LINK/USD']
INFO     root:dashboard.py:126 [PnL] Data: [-6.36, 0.0, 0.0, 88.74, 0.0, 0.0, 0.02, 0.0, 0.0]
INFO     root:dashboard.py:125 [PnL] Labels: ['ETH/USD', 'AAVE/USD', 'XLM/USD', 'BTC/USD', 'DOGE/USD', 'XRP/USD', 'SOL/USD', 'LTC/USD', 'LINK/USD']
INFO     root:dashboard.py:126 [PnL] Data: [-6.36, 0.0, 0.0, 88.74, 0.0, 0.0, 0.02, 0.0, 0.0]
INFO     root:dashboard.py:125 [PnL] Labels: ['BTC/USD']
INFO     root:dashboard.py:126 [PnL] Data: [2000.0]
INFO     root:dashboard.py:125 [PnL] Labels: ['BTC/USD']
INFO     root:dashboard.py:126 [PnL] Data: [-2000.0]
INFO     root:dashboard.py:125 [PnL] Labels: ['BTC/USD', 'ETH/USD']
INFO     root:dashboard.py:126 [PnL] Data: [2000.0, 200.0]
ERROR    root:dashboard.py:31 [Dashboard] Failed to load sentiment.json: Expecting property name enclosed in double quotes: line 1 column 3 (char 2)
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:125 [PnL] Labels: ['BTC/USD']
INFO     root:dashboard.py:126 [PnL] Data: [200.0]
INFO     root:dashboard.py:125 [PnL] Labels: ['BTC/USD']
INFO     root:dashboard.py:126 [PnL] Data: [200.0]
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/partial "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:125 [PnL] Labels: ['SYM0', 'SYM1', 'SYM2', 'SYM3', 'SYM4', 'SYM5', 'SYM6', 'SYM7', 'SYM8', 'SYM9', 'SYM10', 'SYM11', 'SYM12', 'SYM13', 'SYM14', 'SYM15', 'SYM16', 'SYM17', 'SYM18', 'SYM19', 'SYM20', 'SYM21', 'SYM22', 'SYM23', 'SYM24', 'SYM25', 'SYM26', 'SYM27', 'SYM28', 'SYM29']
INFO     root:dashboard.py:126 [PnL] Data: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
INFO     root:dashboard.py:125 [PnL] Labels: ['SYM0', 'SYM1', 'SYM2', 'SYM3', 'SYM4', 'SYM5', 'SYM6', 'SYM7', 'SYM8', 'SYM9', 'SYM10', 'SYM11', 'SYM12', 'SYM13', 'SYM14', 'SYM15', 'SYM16', 'SYM17', 'SYM18', 'SYM19', 'SYM20', 'SYM21', 'SYM22', 'SYM23', 'SYM24', 'SYM25', 'SYM26', 'SYM27', 'SYM28', 'SYM29']
INFO     root:dashboard.py:126 [PnL] Data: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/partial "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:125 [PnL] Labels: ['BTC/USD']
INFO     root:dashboard.py:126 [PnL] Data: [0.0]
INFO     root:dashboard.py:125 [PnL] Labels: ['BTC/USD']
INFO     root:dashboard.py:126 [PnL] Data: [0.0]
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/partial "HTTP/1.1 200 OK"
INFO     root:main.py:83 [TradeCycle] === Starting cycle at 2025-10-10 15:18:02 ===
INFO     root:main.py:99 [Strategy] Using strategy: gpt-sentiment
INFO     root:main.py:105 [Scanner] Top 1 symbols: ['BTC/USD']
INFO     root:main.py:106 [News] Retrieved 1 symbol groups with unseen headlines
INFO     root:main.py:118 [BTC/USD] Checking...
INFO     root:main.py:129 [BTC/USD] Current price: 50000.0
INFO     root:main.py:130 [BTC/USD] Current USD balance: 10000.0
INFO     root:main.py:140 [BTC/USD] Headline: Bitcoin surges to new all-time high
INFO     root:main.py:143 [BTC/USD] Signal: BUY | Reason: Positive sentiment
INFO     root:main.py:146 [BTC/USD] Trade result: {'timestamp': '2025-10-10T15:18:02.185632', 'action': 'BUY', 'symbol': 'BTC/USD', 'price': 50000.0, 'amount': 0.01, 'value': 500.0, 'reason': 'Positive sentiment'}
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — Positive sentiment
INFO     root:main.py:149 [BTC/USD] Notified result.
INFO     root:main.py:162 [BTC/USD] Marked 1 headlines as seen.
INFO     root:main.py:170 [TradeCycle] === Completed cycle at 2025-10-10 15:18:02 ===
INFO     root:main.py:65 [Status] Updated bot_status.json: {'time': '2025-10-10 15:18:02', 'message': 'Completed trade cycle successfully.', 'next_run': '2025-10-10 15:18:02'}
INFO     root:main.py:184 [Scheduler] Next run scheduled at 2025-10-10 15:18:02
INFO     root:main.py:83 [TradeCycle] === Starting cycle at 2025-10-10 15:18:02 ===
INFO     root:main.py:99 [Strategy] Using strategy: gpt-sentiment
INFO     root:main.py:105 [Scanner] Top 2 symbols: ['BTC/USD', 'ETH/USD']
INFO     root:main.py:106 [News] Retrieved 2 symbol groups with unseen headlines
INFO     root:main.py:118 [BTC/USD] Checking...
INFO     root:main.py:129 [BTC/USD] Current price: 50000.0
INFO     root:main.py:130 [BTC/USD] Current USD balance: 10000.0
INFO     root:main.py:140 [BTC/USD] Headline: Bitcoin surges
INFO     root:main.py:143 [BTC/USD] Signal: BUY | Reason: Positive
INFO     root:main.py:146 [BTC/USD] Trade result: {'timestamp': '2025-10-10T15:18:02.193574', 'action': 'BUY', 'symbol': 'BTC/USD', 'price': 50000.0, 'amount': 0.01, 'value': 500.0, 'reason': 'Positive'}
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — Positive
INFO     root:main.py:149 [BTC/USD] Notified result.
INFO     root:main.py:162 [BTC/USD] Marked 1 headlines as seen.
INFO     root:main.py:118 [ETH/USD] Checking...
INFO     root:main.py:129 [ETH/USD] Current price: 3000.0
INFO     root:main.py:130 [ETH/USD] Current USD balance: 10000.0
INFO     root:main.py:140 [ETH/USD] Headline: Ethereum drops
INFO     root:main.py:143 [ETH/USD] Signal: SELL | Reason: Negative
INFO     root:main.py:146 [ETH/USD] Trade result: {'timestamp': '2025-10-10T15:18:02.195282', 'action': 'SELL', 'symbol': 'ETH/USD', 'price': 3000.0, 'amount': 0.01, 'value': 30.0, 'reason': 'Negative'}
INFO     root:notifier.py:14 [ALERT] [ETH/USD] SELL @ 3000.0 — Negative
INFO     root:main.py:149 [ETH/USD] Notified result.
INFO     root:main.py:162 [ETH/USD] Marked 1 headlines as seen.
INFO     root:main.py:170 [TradeCycle] === Completed cycle at 2025-10-10 15:18:02 ===
INFO     root:main.py:65 [Status] Updated bot_status.json: {'time': '2025-10-10 15:18:02', 'message': 'Completed trade cycle successfully.', 'next_run': '2025-10-10 15:18:02'}
INFO     root:main.py:184 [Scheduler] Next run scheduled at 2025-10-10 15:18:02
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:main.py:228 [Manual] Trade cycle triggered via /run-now endpoint
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/run-now "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:125 [PnL] Labels: ['ETH/USD', 'AAVE/USD', 'XLM/USD', 'BTC/USD', 'DOGE/USD', 'XRP/USD', 'SOL/USD', 'LTC/USD', 'LINK/USD']
INFO     root:dashboard.py:126 [PnL] Data: [-6.36, 0.0, 0.0, 88.74, 0.0, 0.0, 0.02, 0.0, 0.0]
INFO     root:dashboard.py:125 [PnL] Labels: ['ETH/USD', 'AAVE/USD', 'XLM/USD', 'BTC/USD', 'DOGE/USD', 'XRP/USD', 'SOL/USD', 'LTC/USD', 'LINK/USD']
INFO     root:dashboard.py:126 [PnL] Data: [-6.36, 0.0, 0.0, 88.74, 0.0, 0.0, 0.02, 0.0, 0.0]
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/partial "HTTP/1.1 200 OK"
INFO     root:main.py:83 [TradeCycle] === Starting cycle at 2025-10-10 15:18:02 ===
INFO     root:main.py:99 [Strategy] Using strategy: gpt-sentiment
INFO     root:main.py:105 [Scanner] Top 2 symbols: ['BTC/USD', 'ETH/USD']
INFO     root:main.py:106 [News] Retrieved 2 symbol groups with unseen headlines
INFO     root:main.py:118 [BTC/USD] Checking...
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:125 [PnL] Labels: ['BTC/USD']
INFO     root:dashboard.py:126 [PnL] Data: [2000.0]
INFO     root:dashboard.py:125 [PnL] Labels: ['BTC/USD']
INFO     root:dashboard.py:126 [PnL] Data: [2000.0]
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/partial "HTTP/1.1 200 OK"
INFO     root:main.py:65 [Status] Updated bot_status.json: {'time': '2025-01-01 00:00:00', 'message': 'ok', 'next_run': 'soon'}
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/status "HTTP/1.1 200 OK"
INFO     root:main.py:83 [TradeCycle] === Starting cycle at 2025-10-10 15:18:02 ===
INFO     root:main.py:99 [Strategy] Using strategy: gpt-sentiment
INFO     root:main.py:105 [Scanner] Top 1 symbols: ['BTC/USD']
INFO     root:main.py:106 [News] Retrieved 1 symbol groups with unseen headlines
INFO     root:main.py:118 [BTC/USD] Checking...
INFO     root:main.py:129 [BTC/USD] Current price: 50000.0
INFO     root:main.py:130 [BTC/USD] Current USD balance: 1000.0
INFO     root:main.py:140 [BTC/USD] Headline: Breaking news!
INFO     root:main.py:143 [BTC/USD] Signal: BUY | Reason: Positive news
INFO     root:main.py:146 [BTC/USD] Trade result: {'trade': 'executed'}
INFO     root:main.py:149 [BTC/USD] Notified result.
INFO     root:main.py:162 [BTC/USD] Marked 1 headlines as seen.
INFO     root:main.py:170 [TradeCycle] === Completed cycle at 2025-10-10 15:18:02 ===
INFO     root:main.py:65 [Status] Updated bot_status.json: {'time': '2025-10-10 15:18:02', 'message': 'Completed trade cycle successfully.', 'next_run': 'Unknown'}
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:main.py:228 [Manual] Trade cycle triggered via /run-now endpoint
INFO     root:main.py:83 [TradeCycle] === Starting cycle at 2025-10-10 15:18:02 ===
INFO     root:main.py:99 [Strategy] Using strategy: gpt-sentiment
DEBUG    urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): api.kraken.com:443
DEBUG    urllib3.connectionpool:connectionpool.py:544 https://api.kraken.com:443 "GET /0/public/Ticker?pair=all HTTP/1.1" 200 39
INFO     root:main.py:105 [Scanner] Top 0 symbols: []
INFO     root:main.py:106 [News] Retrieved 0 symbol groups with unseen headlines
INFO     root:main.py:170 [TradeCycle] === Completed cycle at 2025-10-10 15:18:03 ===
INFO     root:main.py:65 [Status] Updated bot_status.json: {'time': '2025-10-10 15:18:03', 'message': 'No actionable headlines or symbols.', 'next_run': 'Unknown'}
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/run-now "HTTP/1.1 200 OK"
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — Positive sentiment detected
INFO     root:notifier.py:14 [ALERT] [ETH/USD] SELL @ 3000.0 — Negative news
INFO     root:notifier.py:14 [ALERT] [SOL/USD] HOLD @ 100.0 — Mixed sentiment
INFO     root:notifier.py:14 [ALERT] [?] BUY @ 50000.0 — Test
INFO     root:notifier.py:14 [ALERT] [BTC/USD] HOLD @ 50000.0 — Test
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 0 — Test
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — No reason.
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — Test
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — Test
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — Test
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — Buy signal
INFO     root:notifier.py:14 [ALERT] [ETH/USD] SELL @ 3000.0 — Sell signal
INFO     root:notifier.py:14 [ALERT] [SOL/USD] HOLD @ 100.0 — Hold signal
ERROR    root:sentiment.py:87 [SentimentSignal] GPT error for BTC/USD: API timeout
ERROR    root:sentiment.py:87 [SentimentSignal] GPT error for BTC/USD: Expecting value: line 1 column 1 (char 0)
INFO     root:sentiment.py:118 [SentimentSignal] Sending 3 headlines for BTC/USD to GPT
INFO     root:sentiment.py:135 [SentimentSignal] BTC/USD consolidated signal: HOLD — Mixed sentiment
INFO     root:sentiment.py:118 [SentimentSignal] Sending 2 headlines for BTC/USD to GPT
ERROR    root:sentiment.py:139 [SentimentSignal] GPT error for BTC/USD: API error
INFO     root:sentiment.py:118 [SentimentSignal] Sending 3 headlines for BTC/USD to GPT
INFO     root:sentiment.py:135 [SentimentSignal] BTC/USD consolidated signal: BUY — Positive overall
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 1 strategies
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 1 strategies
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: custom
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 1 strategies
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: custom
INFO     root:strategy_manager.py:72 [StrategyManager] Removed strategy: custom
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 1 strategies
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: test
INFO     root:strategy_manager.py:88 [StrategyManager] Disabled strategy: test
INFO     root:strategy_manager.py:79 [StrategyManager] Enabled strategy: test
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 1 strategies
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: s1
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: s2
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: s3
INFO     root:strategy_manager.py:134 [s1] BTC/USD: BUY (conf: 0.80) - s1 signal
INFO     root:strategy_manager.py:134 [s2] BTC/USD: BUY (conf: 0.70) - s2 signal
INFO     root:strategy_manager.py:134 [s3] BTC/USD: BUY (conf: 0.90) - s3 signal
INFO     root:strategy_manager.py:164 [StrategyManager] Final signal for BTC/USD: BUY (conf: 0.80)
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 1 strategies
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: s1
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: s2
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: s3
INFO     root:strategy_manager.py:134 [s1] BTC/USD: BUY (conf: 0.80) - s1 signal
INFO     root:strategy_manager.py:134 [s2] BTC/USD: SELL (conf: 0.70) - s2 signal
INFO     root:strategy_manager.py:134 [s3] BTC/USD: BUY (conf: 0.90) - s3 signal
INFO     root:strategy_manager.py:164 [StrategyManager] Final signal for BTC/USD: BUY (conf: 0.57)
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 1 strategies
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: s1
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: s2
INFO     root:strategy_manager.py:134 [s1] BTC/USD: BUY (conf: 0.50) - s1 signal
INFO     root:strategy_manager.py:134 [s2] BTC/USD: BUY (conf: 0.40) - s2 signal
INFO     root:strategy_manager.py:164 [StrategyManager] Final signal for BTC/USD: BUY (conf: 0.45)
INFO     root:strategy_manager.py:201 [StrategyManager] Confidence 0.45 below threshold 0.7, converting to HOLD
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 1 strategies
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: s1
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: s2
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: s3
INFO     root:strategy_manager.py:134 [s1] BTC/USD: BUY (conf: 0.60) - s1 signal
INFO     root:strategy_manager.py:134 [s2] BTC/USD: SELL (conf: 0.90) - s2 signal
INFO     root:strategy_manager.py:134 [s3] BTC/USD: HOLD (conf: 0.50) - s3 signal
INFO     root:strategy_manager.py:164 [StrategyManager] Final signal for BTC/USD: SELL (conf: 0.90)
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 1 strategies
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: s1
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: s2
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: s3
INFO     root:strategy_manager.py:134 [s1] BTC/USD: BUY (conf: 0.70) - s1 signal
INFO     root:strategy_manager.py:134 [s2] BTC/USD: BUY (conf: 0.80) - s2 signal
INFO     root:strategy_manager.py:134 [s3] BTC/USD: BUY (conf: 0.90) - s3 signal
INFO     root:strategy_manager.py:164 [StrategyManager] Final signal for BTC/USD: BUY (conf: 0.80)
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 1 strategies
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: s1
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: s2
INFO     root:strategy_manager.py:67 [StrategyManager] Added strategy: s3
INFO     root:strategy_manager.py:134 [s1] BTC/USD: BUY (conf: 0.80) - s1 signal
INFO     root:strategy_manager.py:134 [s2] BTC/USD: SELL (conf: 0.70) - s2 signal
INFO     root:strategy_manager.py:134 [s3] BTC/USD: BUY (conf: 0.90) - s3 signal
INFO     root:strategy_manager.py:164 [StrategyManager] Final signal for BTC/USD: HOLD (conf: 0.30)
INFO     root:strategy_manager.py:201 [StrategyManager] Confidence 0.30 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 1 strategies
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 1 strategies
INFO     root:strategy_manager.py:319 [StrategyManager] Configuration updated
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 3 strategies
INFO     root:strategy_manager.py:134 [sentiment] BTC/USD: BUY (conf: 0.60) - Sentiment: Keyword match (positive): Bitcoin adoption growing
INFO     root:strategy_manager.py:134 [technical] BTC/USD: SELL (conf: 0.47) - Technical: SMA: HOLD, RSI: SELL, Momentum: SELL
INFO     root:strategy_manager.py:134 [volume] BTC/USD: BUY (conf: 0.20) - Volume: Normal volume | No clear volume-price pattern | OBV rising (accumulation)
INFO     root:strategy_manager.py:164 [StrategyManager] Final signal for BTC/USD: BUY (conf: 0.27)
INFO     root:strategy_manager.py:201 [StrategyManager] Confidence 0.27 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 3 strategies
INFO     root:strategy_manager.py:134 [sentiment] BTC/USD: BUY (conf: 0.80) - Sentiment: Keyword match (positive): Bitcoin bullish
INFO     root:strategy_manager.py:134 [technical] BTC/USD: SELL (conf: 0.47) - Technical: SMA: HOLD, RSI: SELL, Momentum: SELL
INFO     root:strategy_manager.py:134 [volume] BTC/USD: BUY (conf: 0.20) - Volume: Normal volume | No clear volume-price pattern | OBV rising (accumulation)
INFO     root:strategy_manager.py:164 [StrategyManager] Final signal for BTC/USD: BUY (conf: 0.34)
INFO     root:strategy_manager.py:201 [StrategyManager] Confidence 0.34 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 3 strategies
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-95d7b7fd-0392-4eae-b208-0a66bf5e2d2e', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test headline" and the crypto symbol BTC/USD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7775759d9490>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x77757671a650> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x777575d58650>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 20:18:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'1036'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1055'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199927'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_9558a73c16cd4d79b9fb05f5ad7a9f3f'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=nbCeTG0NcZDN3z7Mg0ORJ9Gtd1B3Du.x3nw76bag4TM-1760127485-1.0.1.1-arBfO84wf06XhuSJxz5yO1314uaj0sNnZiDJxbS7KH7bNnF.4TcFRtH2PMCiwxcXvGQrhoVht1RBTvI_b0qm.NbZ1C2JXNDfFwpdgvVCKLA; path=/; expires=Fri, 10-Oct-25 20:48:05 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=_GUvaqIt1n7WA4AZmyvOzssAz7qcEkfk81U1JWkO8s0-1760127485541-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c8ce09a8b16b45-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Fri, 10 Oct 2025 20:18:05 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '1036'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1055'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '199927'), ('x-ratelimit-reset-requests', '8.64s'), ('x-ratelimit-reset-tokens', '21ms'), ('x-request-id', 'req_9558a73c16cd4d79b9fb05f5ad7a9f3f'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=nbCeTG0NcZDN3z7Mg0ORJ9Gtd1B3Du.x3nw76bag4TM-1760127485-1.0.1.1-arBfO84wf06XhuSJxz5yO1314uaj0sNnZiDJxbS7KH7bNnF.4TcFRtH2PMCiwxcXvGQrhoVht1RBTvI_b0qm.NbZ1C2JXNDfFwpdgvVCKLA; path=/; expires=Fri, 10-Oct-25 20:48:05 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=_GUvaqIt1n7WA4AZmyvOzssAz7qcEkfk81U1JWkO8s0-1760127485541-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '98c8ce09a8b16b45-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_9558a73c16cd4d79b9fb05f5ad7a9f3f
INFO     root:strategy_manager.py:134 [sentiment] BTC/USD: HOLD (conf: 0.30) - Sentiment: Market conditions are uncertain, and there are no strong indicators for a significant price movement.
INFO     root:strategy_manager.py:134 [technical] BTC/USD: SELL (conf: 0.27) - Technical: SMA: HOLD, RSI: SELL, Momentum: HOLD
INFO     root:strategy_manager.py:134 [volume] BTC/USD: HOLD (conf: 0.30) - Volume: Normal volume | No clear volume-price pattern | OBV neutral
INFO     root:strategy_manager.py:164 [StrategyManager] Final signal for BTC/USD: HOLD (conf: 0.19)
INFO     root:strategy_manager.py:201 [StrategyManager] Confidence 0.19 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 3 strategies
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-09d6f022-1204-4a22-9ebe-bf5c6aae59df', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test" and the crypto symbol SYMBOL0/USD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7775759db650>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x7775759f6ed0> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7775759db6e0>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 20:18:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'713'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'969'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'199928'), (b'x-ratelimit-reset-requests', b'15.346s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_f8ed53586aaa4c619e7aa52e7e72a0c2'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=pYnQ5YQVz2ZtWZic6LtQqtq7qWZCBa.GPsCFB8QDZdg-1760127487-1.0.1.1-B2_Y9t48SRIWPetUhA68To2uYGVT.kCf5qprNJmBEcqO_vm5mCmmKJVOhGZpzqxWpNBEXqwX22NXAk0hNjGRQsSSahL0gMZD9_e0iNbs7Uc; path=/; expires=Fri, 10-Oct-25 20:48:07 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=kRSmnRB_WrBRYeCtl_d71LcuHPpvs2RbTcle9yZGeBg-1760127487170-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c8ce11a8d76b5b-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Fri, 10 Oct 2025 20:18:07 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '713'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '969'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9998'), ('x-ratelimit-remaining-tokens', '199928'), ('x-ratelimit-reset-requests', '15.346s'), ('x-ratelimit-reset-tokens', '21ms'), ('x-request-id', 'req_f8ed53586aaa4c619e7aa52e7e72a0c2'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=pYnQ5YQVz2ZtWZic6LtQqtq7qWZCBa.GPsCFB8QDZdg-1760127487-1.0.1.1-B2_Y9t48SRIWPetUhA68To2uYGVT.kCf5qprNJmBEcqO_vm5mCmmKJVOhGZpzqxWpNBEXqwX22NXAk0hNjGRQsSSahL0gMZD9_e0iNbs7Uc; path=/; expires=Fri, 10-Oct-25 20:48:07 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=kRSmnRB_WrBRYeCtl_d71LcuHPpvs2RbTcle9yZGeBg-1760127487170-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '98c8ce11a8d76b5b-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_f8ed53586aaa4c619e7aa52e7e72a0c2
ERROR    root:sentiment.py:87 [SentimentSignal] GPT error for SYMBOL0/USD: Expecting value: line 1 column 1 (char 0)
INFO     root:strategy_manager.py:134 [sentiment] SYMBOL0/USD: HOLD (conf: 0.30) - Sentiment: GPT error: Expecting value: line 1 column 1 (char 0)
INFO     root:strategy_manager.py:134 [technical] SYMBOL0/USD: SELL (conf: 0.27) - Technical: SMA: HOLD, RSI: SELL, Momentum: HOLD
INFO     root:strategy_manager.py:134 [volume] SYMBOL0/USD: HOLD (conf: 0.30) - Volume: Normal volume | No clear volume-price pattern | OBV neutral
INFO     root:strategy_manager.py:164 [StrategyManager] Final signal for SYMBOL0/USD: HOLD (conf: 0.19)
INFO     root:strategy_manager.py:201 [StrategyManager] Confidence 0.19 below threshold 0.5, converting to HOLD
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-5d56bcba-a602-4769-94be-e0926e40829f', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test" and the crypto symbol SYMBOL1/USD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 20:18:07 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'537'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'556'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9997'), (b'x-ratelimit-remaining-tokens', b'199928'), (b'x-ratelimit-reset-requests', b'23.045s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_249473784a1841abb895be05ca4878a2'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c8ce1bbc946b5b-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 10 Oct 2025 20:18:07 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '537', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '556', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9997', 'x-ratelimit-remaining-tokens': '199928', 'x-ratelimit-reset-requests': '23.045s', 'x-ratelimit-reset-tokens': '21ms', 'x-request-id': 'req_249473784a1841abb895be05ca4878a2', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98c8ce1bbc946b5b-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_249473784a1841abb895be05ca4878a2
INFO     root:strategy_manager.py:134 [sentiment] SYMBOL1/USD: HOLD (conf: 0.30) - Sentiment: Insufficient information to determine a clear trend or sentiment.
INFO     root:strategy_manager.py:134 [technical] SYMBOL1/USD: SELL (conf: 0.27) - Technical: SMA: HOLD, RSI: SELL, Momentum: HOLD
INFO     root:strategy_manager.py:134 [volume] SYMBOL1/USD: HOLD (conf: 0.30) - Volume: Normal volume | No clear volume-price pattern | OBV neutral
INFO     root:strategy_manager.py:164 [StrategyManager] Final signal for SYMBOL1/USD: HOLD (conf: 0.19)
INFO     root:strategy_manager.py:201 [StrategyManager] Confidence 0.19 below threshold 0.5, converting to HOLD
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c6db7f24-bde1-4db5-9f17-8b8ea7c40543', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test" and the crypto symbol SYMBOL2/USD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 20:18:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'1832'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1868'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9997'), (b'x-ratelimit-remaining-tokens', b'199928'), (b'x-ratelimit-reset-requests', b'22.385s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_b796eaed7e1840a8a0184d29e1beee5c'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c8ce1fc9376b5b-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 10 Oct 2025 20:18:09 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '1832', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1868', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9997', 'x-ratelimit-remaining-tokens': '199928', 'x-ratelimit-reset-requests': '22.385s', 'x-ratelimit-reset-tokens': '21ms', 'x-request-id': 'req_b796eaed7e1840a8a0184d29e1beee5c', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98c8ce1fc9376b5b-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_b796eaed7e1840a8a0184d29e1beee5c
ERROR    root:sentiment.py:87 [SentimentSignal] GPT error for SYMBOL2/USD: Expecting value: line 1 column 1 (char 0)
INFO     root:strategy_manager.py:134 [sentiment] SYMBOL2/USD: HOLD (conf: 0.30) - Sentiment: GPT error: Expecting value: line 1 column 1 (char 0)
INFO     root:strategy_manager.py:134 [technical] SYMBOL2/USD: SELL (conf: 0.27) - Technical: SMA: HOLD, RSI: SELL, Momentum: HOLD
INFO     root:strategy_manager.py:134 [volume] SYMBOL2/USD: HOLD (conf: 0.30) - Volume: Normal volume | No clear volume-price pattern | OBV neutral
INFO     root:strategy_manager.py:164 [StrategyManager] Final signal for SYMBOL2/USD: HOLD (conf: 0.19)
INFO     root:strategy_manager.py:201 [StrategyManager] Confidence 0.19 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 3 strategies
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e36eb02e-7b06-47e0-90c3-448c083d75dc', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Bitcoin positive news" and the crypto symbol BTC/USD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x777575a02270>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x7775767949d0> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x777575a03950>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 20:18:11 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'1297'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1311'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9995'), (b'x-ratelimit-remaining-tokens', b'199925'), (b'x-ratelimit-reset-requests', b'37.54s'), (b'x-ratelimit-reset-tokens', b'22ms'), (b'x-request-id', b'req_77fbd48bb7564663bbcea83e222b7ff5'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=61_C7oKSJA1B6y0vElmZhFSEKHmMeKp9zgdeEOu.wVg-1760127491-1.0.1.1-ZffbIuH4zcGq6IiwAU69AeQM_tXiwryxrfy4BS5vODKIdNfes0V4FR3KBNOwXHaEMr1GTdpcYLFArsx2WBTF_ITlr65phDuokKkt2ylacx8; path=/; expires=Fri, 10-Oct-25 20:48:11 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=gjXgzoaXVYK2LOO2WMa14BFdgiPdI54jQhxUAKkTWqs-1760127491481-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c8ce2d2d16e9a0-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Fri, 10 Oct 2025 20:18:11 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '1297'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1311'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9995'), ('x-ratelimit-remaining-tokens', '199925'), ('x-ratelimit-reset-requests', '37.54s'), ('x-ratelimit-reset-tokens', '22ms'), ('x-request-id', 'req_77fbd48bb7564663bbcea83e222b7ff5'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=61_C7oKSJA1B6y0vElmZhFSEKHmMeKp9zgdeEOu.wVg-1760127491-1.0.1.1-ZffbIuH4zcGq6IiwAU69AeQM_tXiwryxrfy4BS5vODKIdNfes0V4FR3KBNOwXHaEMr1GTdpcYLFArsx2WBTF_ITlr65phDuokKkt2ylacx8; path=/; expires=Fri, 10-Oct-25 20:48:11 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=gjXgzoaXVYK2LOO2WMa14BFdgiPdI54jQhxUAKkTWqs-1760127491481-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '98c8ce2d2d16e9a0-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_77fbd48bb7564663bbcea83e222b7ff5
ERROR    root:sentiment.py:87 [SentimentSignal] GPT error for BTC/USD: Expecting value: line 1 column 1 (char 0)
INFO     root:strategy_manager.py:134 [sentiment] BTC/USD: HOLD (conf: 0.30) - Sentiment: GPT error: Expecting value: line 1 column 1 (char 0)
INFO     root:strategy_manager.py:134 [technical] BTC/USD: SELL (conf: 0.47) - Technical: SMA: HOLD, RSI: SELL, Momentum: SELL
INFO     root:strategy_manager.py:134 [volume] BTC/USD: BUY (conf: 0.20) - Volume: Normal volume | No clear volume-price pattern | OBV rising (accumulation)
INFO     root:strategy_manager.py:164 [StrategyManager] Final signal for BTC/USD: SELL (conf: 0.17)
INFO     root:strategy_manager.py:201 [StrategyManager] Confidence 0.17 below threshold 0.5, converting to HOLD
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-efd35ff2-e645-4a19-94d6-746771805e60', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Bitcoin positive news" and the crypto symbol BTC/USD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 20:18:12 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'731'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'745'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9994'), (b'x-ratelimit-remaining-tokens', b'199925'), (b'x-ratelimit-reset-requests', b'44.764s'), (b'x-ratelimit-reset-tokens', b'22ms'), (b'x-request-id', b'req_19e65772dfc5410b997a033e6a6d2ea5'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c8ce360e2be9a0-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Fri, 10 Oct 2025 20:18:12 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '731', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '745', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9994', 'x-ratelimit-remaining-tokens': '199925', 'x-ratelimit-reset-requests': '44.764s', 'x-ratelimit-reset-tokens': '22ms', 'x-request-id': 'req_19e65772dfc5410b997a033e6a6d2ea5', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '98c8ce360e2be9a0-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_19e65772dfc5410b997a033e6a6d2ea5
ERROR    root:sentiment.py:87 [SentimentSignal] GPT error for BTC/USD: Expecting value: line 1 column 1 (char 0)
INFO     root:strategy_manager.py:134 [sentiment] BTC/USD: HOLD (conf: 0.30) - Sentiment: GPT error: Expecting value: line 1 column 1 (char 0)
INFO     root:strategy_manager.py:134 [technical] BTC/USD: SELL (conf: 0.47) - Technical: SMA: HOLD, RSI: SELL, Momentum: SELL
INFO     root:strategy_manager.py:134 [volume] BTC/USD: BUY (conf: 0.20) - Volume: Normal volume | No clear volume-price pattern | OBV rising (accumulation)
INFO     root:strategy_manager.py:164 [StrategyManager] Final signal for BTC/USD: SELL (conf: 0.17)
INFO     root:strategy_manager.py:201 [StrategyManager] Confidence 0.17 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 3 strategies
WARNING  root:strategy_manager.py:197 ⚠️  Signal logging failed: Simulated logging failure
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 3 strategies
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-23faf1a9-dfa5-4ffd-9348-19de6e5bbacc', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test" and the crypto symbol BTC/USD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7775759db2c0>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x7775759f7950> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7775759da750>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 20:18:15 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'1900'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1910'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9993'), (b'x-ratelimit-remaining-tokens', b'199929'), (b'x-ratelimit-reset-requests', b'1m0.034s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_1adfca5535514d3694d71c125dd82c2b'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=tjjD_F_8ZRghmAn2x.ZQkYgcPgkBf.KU0q9WhoTtlRA-1760127495-1.0.1.1-80QNwWgBKsaVgAYBsI52hQd7HWmGwS2jZYXfmex7E0gXWmB0yCY2qCiQvaSP1GENEdZZcBwQVHDqvGUhdXfhh.8Es2TsQAkevpt5RMXA8_E; path=/; expires=Fri, 10-Oct-25 20:48:15 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=zr7Zgr.DlUHkDerPGoUqsXTuRiM4TGjeh_FlRBbGnc0-1760127495487-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c8ce427f76b789-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Fri, 10 Oct 2025 20:18:15 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '1900'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1910'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9993'), ('x-ratelimit-remaining-tokens', '199929'), ('x-ratelimit-reset-requests', '1m0.034s'), ('x-ratelimit-reset-tokens', '21ms'), ('x-request-id', 'req_1adfca5535514d3694d71c125dd82c2b'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=tjjD_F_8ZRghmAn2x.ZQkYgcPgkBf.KU0q9WhoTtlRA-1760127495-1.0.1.1-80QNwWgBKsaVgAYBsI52hQd7HWmGwS2jZYXfmex7E0gXWmB0yCY2qCiQvaSP1GENEdZZcBwQVHDqvGUhdXfhh.8Es2TsQAkevpt5RMXA8_E; path=/; expires=Fri, 10-Oct-25 20:48:15 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=zr7Zgr.DlUHkDerPGoUqsXTuRiM4TGjeh_FlRBbGnc0-1760127495487-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '98c8ce427f76b789-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_1adfca5535514d3694d71c125dd82c2b
ERROR    root:sentiment.py:87 [SentimentSignal] GPT error for BTC/USD: Expecting value: line 1 column 1 (char 0)
INFO     root:strategy_manager.py:134 [sentiment] BTC/USD: HOLD (conf: 0.30) - Sentiment: GPT error: Expecting value: line 1 column 1 (char 0)
INFO     root:strategy_manager.py:134 [technical] BTC/USD: HOLD (conf: 0.00) - No price data available
INFO     root:strategy_manager.py:134 [volume] BTC/USD: HOLD (conf: 0.00) - No volume data available
INFO     root:strategy_manager.py:164 [StrategyManager] Final signal for BTC/USD: HOLD (conf: 0.11)
INFO     root:strategy_manager.py:201 [StrategyManager] Confidence 0.11 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 3 strategies
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 3 strategies
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-2bd2f7ec-102d-445c-ba52-6b3bee6f97f1', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Bitcoin is rising" and the crypto symbol BTC/USD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x777575a1d160>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x7775759f6dd0> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x777575a1cfe0>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 20:18:18 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'3129'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'3152'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9992'), (b'x-ratelimit-remaining-tokens', b'199926'), (b'x-ratelimit-reset-requests', b'1m6.55s'), (b'x-ratelimit-reset-tokens', b'22ms'), (b'x-request-id', b'req_23ebff3e6c64466fa13a1ec128da7186'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=9wbZ3vevWy1RhYCd7FPStG1onrzH58Fp41.UO88aacQ-1760127498-1.0.1.1-hUf6_BJaQpZOpfhEhd8TtoymVp3AEsZMNIGTTDcfqPW9hRVRvYI6zL2TWKJI814_jH6HC2SWUau_FNPUnyhMPPEYaiC9LiKwR1EkBSkYL10; path=/; expires=Fri, 10-Oct-25 20:48:18 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=F2uSb6cYYdgVnsChrSoVyL630ocajosDRAVTkMzlzWk-1760127498873-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c8ce4fddd98d26-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Fri, 10 Oct 2025 20:18:18 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '3129'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '3152'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9992'), ('x-ratelimit-remaining-tokens', '199926'), ('x-ratelimit-reset-requests', '1m6.55s'), ('x-ratelimit-reset-tokens', '22ms'), ('x-request-id', 'req_23ebff3e6c64466fa13a1ec128da7186'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=9wbZ3vevWy1RhYCd7FPStG1onrzH58Fp41.UO88aacQ-1760127498-1.0.1.1-hUf6_BJaQpZOpfhEhd8TtoymVp3AEsZMNIGTTDcfqPW9hRVRvYI6zL2TWKJI814_jH6HC2SWUau_FNPUnyhMPPEYaiC9LiKwR1EkBSkYL10; path=/; expires=Fri, 10-Oct-25 20:48:18 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=F2uSb6cYYdgVnsChrSoVyL630ocajosDRAVTkMzlzWk-1760127498873-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '98c8ce4fddd98d26-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_23ebff3e6c64466fa13a1ec128da7186
ERROR    root:sentiment.py:87 [SentimentSignal] GPT error for BTC/USD: Expecting value: line 1 column 1 (char 0)
INFO     root:strategy_manager.py:134 [sentiment] BTC/USD: HOLD (conf: 0.30) - Sentiment: GPT error: Expecting value: line 1 column 1 (char 0)
INFO     root:strategy_manager.py:134 [technical] BTC/USD: SELL (conf: 0.47) - Technical: SMA: HOLD, RSI: SELL, Momentum: SELL
INFO     root:strategy_manager.py:134 [volume] BTC/USD: BUY (conf: 0.20) - Volume: Normal volume | No clear volume-price pattern | OBV rising (accumulation)
INFO     root:strategy_manager.py:164 [StrategyManager] Final signal for BTC/USD: SELL (conf: 0.17)
INFO     root:strategy_manager.py:201 [StrategyManager] Confidence 0.17 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:38 [StrategyManager] Initialized with 3 strategies
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a0680f75-2e7a-4aa5-adb6-a8d64d115d9c', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test" and the crypto symbol BTC/USD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x777575a1edb0>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x7775759f75d0> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x777575a1ec30>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Fri, 10 Oct 2025 20:18:21 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'1049'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1690'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9991'), (b'x-ratelimit-remaining-tokens', b'199929'), (b'x-ratelimit-reset-requests', b'1m10.819s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_120d0f7774ec40819793d54a1ab50a5b'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=eQZvRGVBS2CssjZsi_.5LF5LM_ylug_vgG9iIwDU82M-1760127501-1.0.1.1-S7br_m5pUsYEnpf1vqOrq49OfvpV4jEBIsDiBBQWsEAIgH6Sb9nlNGjofNTs90l._aK22GHwHjqh.3JVracP6vpdr0eEz4L3qwVwJGDTxog; path=/; expires=Fri, 10-Oct-25 20:48:21 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=sk0l.iEkGF2_LO3yMkG0sGjvqH1.0oYq1XT.MeuTwwY-1760127501525-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'98c8ce650cc7f065-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Fri, 10 Oct 2025 20:18:21 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '1049'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1690'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9991'), ('x-ratelimit-remaining-tokens', '199929'), ('x-ratelimit-reset-requests', '1m10.819s'), ('x-ratelimit-reset-tokens', '21ms'), ('x-request-id', 'req_120d0f7774ec40819793d54a1ab50a5b'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=eQZvRGVBS2CssjZsi_.5LF5LM_ylug_vgG9iIwDU82M-1760127501-1.0.1.1-S7br_m5pUsYEnpf1vqOrq49OfvpV4jEBIsDiBBQWsEAIgH6Sb9nlNGjofNTs90l._aK22GHwHjqh.3JVracP6vpdr0eEz4L3qwVwJGDTxog; path=/; expires=Fri, 10-Oct-25 20:48:21 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=sk0l.iEkGF2_LO3yMkG0sGjvqH1.0oYq1XT.MeuTwwY-1760127501525-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '98c8ce650cc7f065-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_120d0f7774ec40819793d54a1ab50a5b
ERROR    root:sentiment.py:87 [SentimentSignal] GPT error for BTC/USD: Expecting value: line 1 column 1 (char 0)
INFO     root:strategy_manager.py:134 [sentiment] BTC/USD: HOLD (conf: 0.30) - Sentiment: GPT error: Expecting value: line 1 column 1 (char 0)
INFO     root:strategy_manager.py:134 [technical] BTC/USD: SELL (conf: 0.27) - Technical: SMA: HOLD, RSI: SELL, Momentum: HOLD
INFO     root:strategy_manager.py:134 [volume] BTC/USD: HOLD (conf: 0.30) - Volume: Normal volume | No clear volume-price pattern | OBV neutral
INFO     root:strategy_manager.py:164 [StrategyManager] Final signal for BTC/USD: HOLD (conf: 0.19)
INFO     root:strategy_manager.py:201 [StrategyManager] Confidence 0.19 below threshold 0.5, converting to HOLD
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
