INFO     app.database.connection:connection.py:85 Initializing database at: /home/rcasteen/kraken-ai-bot/data/trading_bot.db
INFO     app.database.connection:connection.py:87 Database initialized successfully
INFO     app.database.connection:connection.py:90 Database location: /home/rcasteen/kraken-ai-bot/data/trading_bot.db
INFO     app.database.connection:connection.py:91 Database size: 2711552 bytes
DEBUG    tzlocal:unix.py:61 /etc/timezone found, contents:
 America/Chicago

DEBUG    tzlocal:unix.py:120 /etc/localtime found
DEBUG    tzlocal:unix.py:136 2 found:
 {'/etc/timezone': 'America/Chicago', '/etc/localtime is a symlink to': 'America/Chicago'}
INFO     root:main.py:261 [Startup] Signal handlers registered
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/summary "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/summary "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:595 [Dashboard] Loaded 2 current signals from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/current "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:595 [Dashboard] Loaded 0 current signals from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/current "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/history "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/history?limit=5 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/history?symbol=BTC/USD "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/history?limit=invalid "HTTP/1.1 400 Bad Request"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/history?limit=5000 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:700 [Dashboard] Calculated performance for 3 strategies from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance?lookback_days=30 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance?lookback_days=invalid "HTTP/1.1 400 Bad Request"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:700 [Dashboard] Calculated performance for 3 strategies from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance?lookback_days=365 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance/technical "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance/nonexistent "HTTP/1.1 404 Not Found"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/correlation "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/correlation "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/signals/latest "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/signals/latest "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/summary "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:595 [Dashboard] Loaded 2 current signals from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/current "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/history "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:700 [Dashboard] Calculated performance for 3 strategies from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance/technical "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/correlation "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/signals/latest "HTTP/1.1 200 OK"
INFO     root:balance_reconciliation.py:45 [BalanceRecon] Exchange balance updated: $200.00 → $195.50
INFO     root:balance_reconciliation.py:63 [BalanceRecon] Trade recorded: BUY $501.30, calculated balance: $-301.30
INFO     root:balance_reconciliation.py:63 [BalanceRecon] Trade recorded: BUY $50.00, calculated balance: $150.00
INFO     root:balance_reconciliation.py:45 [BalanceRecon] Exchange balance updated: $200.00 → $149.50
INFO     root:balance_reconciliation.py:45 [BalanceRecon] Exchange balance updated: $200.00 → $195.50
INFO     root:balance_reconciliation.py:45 [BalanceRecon] Exchange balance updated: $200.00 → $195.50
INFO     root:balance_reconciliation.py:63 [BalanceRecon] Trade recorded: BUY $2.00, calculated balance: $198.00
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1963 [Config] Saved to database: mode=paper, min_confidence=0.5, position_size=5.0
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1963 [Config] Saved to database: mode=paper, min_confidence=0.6, position_size=5.0
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1963 [Config] Saved to database: mode=paper, min_confidence=0.5, position_size=5.0
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 400 Bad Request"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1963 [Config] Saved to database: mode=paper, min_confidence=0.5, position_size=5.0
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1963 [Config] Saved to database: mode=live, min_confidence=0.5, position_size=5.0
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1963 [Config] Saved to database: mode=paper, min_confidence=0.5, position_size=5.0
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1963 [Config] Saved to database: mode=paper, min_confidence=0.5, position_size=5.0
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1963 [Config] Saved to database: mode=paper, min_confidence=0.777, position_size=5.0
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1963 [Config] Saved to database: mode=paper, min_confidence=0.5, position_size=10.0
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1963 [Config] Saved to database: mode=paper, min_confidence=0.777, position_size=8.0
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1963 [Config] Saved to database: mode=paper, min_confidence=0.5, position_size=5.0
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1963 [Config] Saved to database: mode=paper, min_confidence=0.65, position_size=5.0
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1963 [Config] Saved to database: mode=paper, min_confidence=0.8, position_size=7.0
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1963 [Config] Saved to database: mode=paper, min_confidence=0.9, position_size=7.0
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/ "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/ "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/partial "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/partial "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/status "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/status "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/status "HTTP/1.1 200 OK"
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:595 [Dashboard] Loaded 1 current signals from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/current "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:595 [Dashboard] Loaded 1 current signals from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/current "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:157 [Dashboard] Loaded 1 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:157 [Dashboard] Loaded 1 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
INFO     root:data_collector.py:79 [DataCollector] Updated 2 symbols
INFO     root:data_collector.py:79 [DataCollector] Updated 1 symbols
INFO     root:data_collector.py:79 [DataCollector] Updated 1 symbols
INFO     root:data_collector.py:79 [DataCollector] Updated 1 symbols
INFO     root:data_collector.py:79 [DataCollector] Updated 1 symbols
INFO     root:data_collector.py:79 [DataCollector] Updated 1 symbols
ERROR    root:error_tracker.py:78 [OPENAI] API key invalid
ERROR    root:error_tracker.py:78 [EXCHANGE] Validation failed
Traceback (most recent call last):
  File "/home/rcasteen/kraken-ai-bot/tests/test_error_tracker.py", line 55, in test_log_error_with_exception
    raise ValueError("Invalid value")
ValueError: Invalid value
ERROR    root:error_tracker.py:78 [RSS] Feed fetch failed
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [EXCHANGE] Error 2
ERROR    root:error_tracker.py:78 [RSS] Error 3
ERROR    root:error_tracker.py:78 [OPENAI] OpenAI error 1
ERROR    root:error_tracker.py:78 [EXCHANGE] Exchange error
ERROR    root:error_tracker.py:78 [OPENAI] OpenAI error 2
ERROR    root:error_tracker.py:78 [OPENAI] Minor issue
ERROR    root:error_tracker.py:78 [EXCHANGE] Major issue
ERROR    root:error_tracker.py:78 [RSS] Critical issue
ERROR    root:error_tracker.py:78 [TEST] Error 0
ERROR    root:error_tracker.py:78 [TEST] Error 1
ERROR    root:error_tracker.py:78 [TEST] Error 2
ERROR    root:error_tracker.py:78 [TEST] Error 3
ERROR    root:error_tracker.py:78 [TEST] Error 4
ERROR    root:error_tracker.py:78 [TEST] Error 5
ERROR    root:error_tracker.py:78 [TEST] Error 6
ERROR    root:error_tracker.py:78 [TEST] Error 7
ERROR    root:error_tracker.py:78 [TEST] Error 8
ERROR    root:error_tracker.py:78 [TEST] Error 9
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [OPENAI] Error 2
ERROR    root:error_tracker.py:78 [EXCHANGE] Error 3
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [OPENAI] Error 2
ERROR    root:error_tracker.py:78 [EXCHANGE] Error 3
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [OPENAI] Error 2
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [EXCHANGE] Error 2
ERROR    root:error_tracker.py:78 [RSS] Error 3
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [OPENAI] Error 2
ERROR    root:error_tracker.py:78 [EXCHANGE] Error 3
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [EXCHANGE] Error 2
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [EXCHANGE] Error 2
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [TEST] Error 0
ERROR    root:error_tracker.py:78 [TEST] Error 1
ERROR    root:error_tracker.py:78 [TEST] Error 2
ERROR    root:error_tracker.py:78 [TEST] Error 3
ERROR    root:error_tracker.py:78 [TEST] Error 4
ERROR    root:error_tracker.py:78 [TEST] Error 5
ERROR    root:error_tracker.py:78 [TEST] Error 6
ERROR    root:error_tracker.py:78 [TEST] Error 7
ERROR    root:error_tracker.py:78 [TEST] Error 8
ERROR    root:error_tracker.py:78 [TEST] Error 9
ERROR    root:error_tracker.py:78 [TEST] Error 10
ERROR    root:error_tracker.py:78 [TEST] Error 11
ERROR    root:error_tracker.py:78 [TEST] Error 12
ERROR    root:error_tracker.py:78 [TEST] Error 13
ERROR    root:error_tracker.py:78 [TEST] Error 14
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [OPENAI] Error 2
ERROR    root:error_tracker.py:78 [EXCHANGE] Error 3
ERROR    root:error_tracker.py:78 [TEST] Error
ERROR    root:error_tracker.py:78 [OPENAI] Error
ERROR    root:error_tracker.py:78 [TEST] Test message
ERROR    root:error_tracker.py:78 [TEST] Error
ERROR    root:error_tracker.py:78 [TEST] Error
ERROR    root:error_tracker.py:78 [OPENAI] openai error 0
ERROR    root:error_tracker.py:78 [OPENAI] openai error 1
ERROR    root:error_tracker.py:78 [OPENAI] openai error 2
ERROR    root:error_tracker.py:78 [EXCHANGE] exchange error 0
ERROR    root:error_tracker.py:78 [EXCHANGE] exchange error 1
ERROR    root:error_tracker.py:78 [EXCHANGE] exchange error 2
ERROR    root:error_tracker.py:78 [RSS] rss error 0
ERROR    root:error_tracker.py:78 [RSS] rss error 1
ERROR    root:error_tracker.py:78 [RSS] rss error 2
ERROR    root:error_tracker.py:78 [DATABASE] database error 0
ERROR    root:error_tracker.py:78 [DATABASE] database error 1
ERROR    root:error_tracker.py:78 [DATABASE] database error 2
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: BUY (conf: 0.80) - Sentiment: Keyword match (positive): Major cryptocurrency rally continues
INFO     root:strategy_manager.py:141 [technical] BTCUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=BUY, actionable_weight=1.0, hold_weight=1.8, raw_score=0.8
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.80)
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY BTCUSD | signal_id=1
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY BTCUSD
WARNING  root:telegram.py:21 [Telegram] Notifications disabled: Missing TELEGRAM_BOT_TOKEN or TELEGRAM_CHAT_ID
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:64 [Dashboard] Loaded 1 trades from database
INFO     root:dashboard.py:64 [Dashboard] Loaded 1 trades from database
INFO     root:dashboard.py:237 [PnL] Labels: ['BTCUSD']
INFO     root:dashboard.py:238 [PnL] Data: [0.0]
INFO     root:dashboard.py:64 [Dashboard] Loaded 1 trades from database
INFO     root:dashboard.py:237 [PnL] Labels: ['BTCUSD']
INFO     root:dashboard.py:238 [PnL] Data: [0.0]
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/partial "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/partial "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: PUT http://testserver/api/feeds/1 "HTTP/1.1 404 Not Found"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2009 [Feeds] Updated feed ID 1 (Test Updated Name)
INFO     httpx:_client.py:1025 HTTP Request: PUT http://testserver/api/feeds/1 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:157 [Dashboard] Loaded 1 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:157 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:157 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: PUT http://testserver/api/feeds/1/toggle "HTTP/1.1 404 Not Found"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2055 [Feeds] Toggled feed ID 1 (Test Feed): disabled
INFO     httpx:_client.py:1025 HTTP Request: PUT http://testserver/api/feeds/1/toggle "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:157 [Dashboard] Loaded 1 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: DELETE http://testserver/api/feeds/99999 "HTTP/1.1 404 Not Found"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: DELETE http://testserver/api/feeds/99999 "HTTP/1.1 404 Not Found"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:157 [Dashboard] Loaded 1 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1853 [Feeds] Deleted feed: Test Feed (ID: 1)
INFO     httpx:_client.py:1025 HTTP Request: DELETE http://testserver/api/feeds/1 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:157 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2055 [Feeds] Toggled feed ID 1 (Test Feed): disabled
INFO     httpx:_client.py:1025 HTTP Request: PUT http://testserver/api/feeds/1/toggle "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1853 [Feeds] Deleted feed: Test Feed (ID: 1)
INFO     httpx:_client.py:1025 HTTP Request: DELETE http://testserver/api/feeds/1 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/errors "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/errors "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/errors?component=openai "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/errors?limit=1 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/errors/clear "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/errors/clear?component=openai "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/openai "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/openai "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/openai "HTTP/1.1 500 Internal Server Error"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/kraken "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/kraken "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/rss "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/rss "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/health/detailed "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/health/detailed "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/errors "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/errors/clear?component=openai "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/errors "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/openai "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/errors?component=openai "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/openai "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/openai "HTTP/1.1 200 OK"
INFO     root:kraken.py:38 [KrakenClient] Balance API response keys: ['ZUSD']
INFO     root:kraken.py:39 [KrakenClient] Full balances: {'ZUSD': '10000.50'}
INFO     root:kraken.py:46 [KrakenClient] Found balance under key 'ZUSD': $10000.50
INFO     root:kraken.py:38 [KrakenClient] Balance API response keys: ['ZUSD']
INFO     root:kraken.py:39 [KrakenClient] Full balances: {'ZUSD': '1000'}
INFO     root:kraken.py:46 [KrakenClient] Found balance under key 'ZUSD': $1000.00
ERROR    root:kraken.py:55 [KrakenClient] Balance error: Auth error
INFO     root:kraken.py:38 [KrakenClient] Balance API response keys: ['ZUSD']
INFO     root:kraken.py:39 [KrakenClient] Full balances: {'ZUSD': '5000'}
INFO     root:risk_manager.py:68 [RiskManager] Position size: 0.000117 @ $50000.00 = $5.87 (capital: $195.50)
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — Positive sentiment detected
INFO     root:notifier.py:14 [ALERT] [ETH/USD] SELL @ 3000.0 — Negative news
INFO     root:notifier.py:14 [ALERT] [SOL/USD] HOLD @ 100.0 — Mixed sentiment
INFO     root:notifier.py:14 [ALERT] [?] BUY @ 50000.0 — Test
INFO     root:notifier.py:14 [ALERT] [BTC/USD] HOLD @ 50000.0 — Test
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 0 — Test
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — No reason.
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — Test
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — Test
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — Test
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — Buy signal
INFO     root:notifier.py:14 [ALERT] [ETH/USD] SELL @ 3000.0 — Sell signal
INFO     root:notifier.py:14 [ALERT] [SOL/USD] HOLD @ 100.0 — Hold signal
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy ETHUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy ETHUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, sell ETHUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: sell ETHUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, sell BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: sell BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, sell BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: sell BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, sell BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: sell BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy ETHUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy ETHUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, sell ETHUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: sell ETHUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, buy ETHUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy ETHUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY ETHUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY ETHUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, SELL ETHUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: SELL ETHUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, BUY ETHUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY ETHUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=3, SELL BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: SELL BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY BTCUSD
ERROR    root:paper_trader.py:231 [PaperTrader] Failed to save trade to database: Database connection failed
ERROR    root:paper_trader.py:135 [PaperTrader] Failed to update holdings in database: Database connection failed
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, SELL BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: SELL BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, sell BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: sell BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=3, sell BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: sell BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=3, sell BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: sell BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, buy ETHUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy ETHUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=3, buy BTCUSD | signal_id=None
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:risk_manager.py:68 [RiskManager] Position size: 0.000120 @ $50000.00 = $6.00 (capital: $200.00)
INFO     root:risk_manager.py:76 [RiskManager] Updated - Daily P&L: $-11.00, Capital: $189.00
ERROR    root:risk_manager.py:46 [RiskManager] SHUTDOWN: Daily loss $11.00 exceeds limit $10.00
INFO     root:risk_manager.py:68 [RiskManager] Position size: 0.000117 @ $50000.00 = $5.87 (capital: $195.50)
INFO     root:risk_manager.py:68 [RiskManager] Position size: 0.000120 @ $50000.00 = $6.00 (capital: $200.00)
INFO     root:risk_manager.py:68 [RiskManager] Position size: 0.060000 @ $50000.00 = $3000.00 (capital: $100000.00)
ERROR    root:sentiment.py:273 [SentimentSignal] GPT error for BTC/USD: API timeout
ERROR    root:sentiment.py:273 [SentimentSignal] GPT error for BTC/USD: Could not extract JSON from response: invalid json
INFO     root:sentiment.py:304 [SentimentSignal] Sending 3 headlines for BTC/USD to GPT
INFO     root:sentiment.py:323 [SentimentSignal] BTC/USD consolidated signal: HOLD — Mixed sentiment
INFO     root:sentiment.py:304 [SentimentSignal] Sending 2 headlines for BTC/USD to GPT
ERROR    root:sentiment.py:327 [SentimentSignal] GPT error for BTC/USD: API error
INFO     root:sentiment.py:304 [SentimentSignal] Sending 3 headlines for BTC/USD to GPT
INFO     root:sentiment.py:323 [SentimentSignal] BTC/USD consolidated signal: BUY — Positive overall
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: BUY (conf: 0.80) - Sentiment: Keyword match (positive): Bitcoin surges to new all-time high
INFO     root:strategy_manager.py:141 [technical] BTCUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=BUY, actionable_weight=1.0, hold_weight=1.8, raw_score=0.8
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.80)
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: BUY (conf: 0.80) - Sentiment: Keyword match (positive): Bitcoin surges past resistance levels
INFO     root:strategy_manager.py:141 [technical] BTCUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=BUY, actionable_weight=1.0, hold_weight=1.8, raw_score=0.8
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.80)
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY BTCUSD | signal_id=1
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY BTCUSD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-63676fac-0588-4ec5-8481-b43b8a20295a', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Ethereum breaks resistance" and the crypto symbol ETHUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d32057a840>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x79d32092cfd0> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d32069b170>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 Oct 2025 22:17:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'814'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'838'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9979'), (b'x-ratelimit-remaining-tokens', b'199924'), (b'x-ratelimit-reset-requests', b'2m58.202s'), (b'x-ratelimit-reset-tokens', b'22ms'), (b'x-request-id', b'req_c39b7240537a4f77b5c72bfea14964af'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=FdODhlsUi5LOL5pYfJalYPndckd08VZ0hMKDaYD4mDU-1761776259-1.0.1.1-h9HvEL5H0w.GPy8JGRT4QjffgO1IZKY5VmDZJJ5eiM0yZ_TMvtmRnoFn_9jhgS3UWuBVgdgFznLzOvAXOTfn0fXj8CGMeWZGJjgKLUpu9oc; path=/; expires=Wed, 29-Oct-25 22:47:39 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=onGdbxJvpuaWMLT9InTuMkiEVUBIJV.CQQbQsNNqTCk-1761776259038-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'99660b4d6cee7d55-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Wed, 29 Oct 2025 22:17:39 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '814'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '838'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9979'), ('x-ratelimit-remaining-tokens', '199924'), ('x-ratelimit-reset-requests', '2m58.202s'), ('x-ratelimit-reset-tokens', '22ms'), ('x-request-id', 'req_c39b7240537a4f77b5c72bfea14964af'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=FdODhlsUi5LOL5pYfJalYPndckd08VZ0hMKDaYD4mDU-1761776259-1.0.1.1-h9HvEL5H0w.GPy8JGRT4QjffgO1IZKY5VmDZJJ5eiM0yZ_TMvtmRnoFn_9jhgS3UWuBVgdgFznLzOvAXOTfn0fXj8CGMeWZGJjgKLUpu9oc; path=/; expires=Wed, 29-Oct-25 22:47:39 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=onGdbxJvpuaWMLT9InTuMkiEVUBIJV.CQQbQsNNqTCk-1761776259038-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '99660b4d6cee7d55-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_c39b7240537a4f77b5c72bfea14964af
INFO     root:strategy_manager.py:141 [sentiment] ETHUSD: BUY (conf: 0.80) - Sentiment: Breaking resistance often indicates bullish momentum, suggesting potential for price increase.
INFO     root:strategy_manager.py:141 [technical] ETHUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] ETHUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=BUY, actionable_weight=1.0, hold_weight=1.8, raw_score=0.8
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for ETHUSD: BUY (conf: 0.80)
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY ETHUSD | signal_id=1
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY ETHUSD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: custom
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: custom
INFO     root:strategy_manager.py:73 [StrategyManager] Removed strategy: custom
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: test
INFO     root:strategy_manager.py:89 [StrategyManager] Disabled strategy: test
INFO     root:strategy_manager.py:80 [StrategyManager] Enabled strategy: test
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s1
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s2
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s3
INFO     root:strategy_manager.py:141 [s1] BTCUSD: BUY (conf: 0.80) - s1 signal
INFO     root:strategy_manager.py:141 [s2] BTCUSD: BUY (conf: 0.70) - s2 signal
INFO     root:strategy_manager.py:141 [s3] BTCUSD: BUY (conf: 0.90) - s3 signal
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=BUY, actionable_weight=3.0, hold_weight=0, raw_score=2.4
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.80)
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s1
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s2
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s3
INFO     root:strategy_manager.py:141 [s1] BTCUSD: BUY (conf: 0.80) - s1 signal
INFO     root:strategy_manager.py:141 [s2] BTCUSD: SELL (conf: 0.70) - s2 signal
INFO     root:strategy_manager.py:141 [s3] BTCUSD: BUY (conf: 0.90) - s3 signal
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=BUY, actionable_weight=3.0, hold_weight=0, raw_score=1.7000000000000002
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.57)
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s1
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s2
INFO     root:strategy_manager.py:141 [s1] BTCUSD: BUY (conf: 0.50) - s1 signal
INFO     root:strategy_manager.py:141 [s2] BTCUSD: BUY (conf: 0.40) - s2 signal
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=BUY, actionable_weight=2.0, hold_weight=0, raw_score=0.9
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.45)
INFO     root:strategy_manager.py:209 [StrategyManager] Confidence 0.45 below threshold 0.7, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s1
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s2
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s3
INFO     root:strategy_manager.py:141 [s1] BTCUSD: BUY (conf: 0.60) - s1 signal
INFO     root:strategy_manager.py:141 [s2] BTCUSD: SELL (conf: 0.90) - s2 signal
INFO     root:strategy_manager.py:141 [s3] BTCUSD: HOLD (conf: 0.50) - s3 signal
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: SELL (conf: 0.90)
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s1
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s2
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s3
INFO     root:strategy_manager.py:141 [s1] BTCUSD: BUY (conf: 0.70) - s1 signal
INFO     root:strategy_manager.py:141 [s2] BTCUSD: BUY (conf: 0.80) - s2 signal
INFO     root:strategy_manager.py:141 [s3] BTCUSD: BUY (conf: 0.90) - s3 signal
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.80)
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s1
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s2
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s3
INFO     root:strategy_manager.py:141 [s1] BTCUSD: BUY (conf: 0.80) - s1 signal
INFO     root:strategy_manager.py:141 [s2] BTCUSD: SELL (conf: 0.70) - s2 signal
INFO     root:strategy_manager.py:141 [s3] BTCUSD: BUY (conf: 0.90) - s3 signal
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: HOLD (conf: 0.30)
INFO     root:strategy_manager.py:209 [StrategyManager] Confidence 0.30 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:344 [StrategyManager] Configuration updated
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to tests/test_logs/strategy_signals.jsonl
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-08089a05-e040-434b-af31-18ba56a1da9c', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test headline" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d32057ac00>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x79d3205b7ad0> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d32059d400>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 Oct 2025 22:17:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'769'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'782'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9978'), (b'x-ratelimit-remaining-tokens', b'199927'), (b'x-ratelimit-reset-requests', b'3m5.484s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_41e28efe203141c699c8b06ea82477d6'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=nT5Iskiz6FUbzIG51auE7yT_LFUuSqhsPG9WiY3AgAE-1761776260-1.0.1.1-jrX_SJSXWeroVw2IkS2MVZrUfzjvzXsRHqpeVIbK96Swa3gaVW7xkkPVi52K545vOrQlfRzigQfUiOuUjAW4L5rP5rhNgvR1c8AynqjwkoE; path=/; expires=Wed, 29-Oct-25 22:47:40 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=1r9b8cVmg7gKPP8mJRTV5pEl7Z4Q0RfqBS9fzQsGN4g-1761776260335-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'99660b55dd6466fb-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Wed, 29 Oct 2025 22:17:40 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '769'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '782'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9978'), ('x-ratelimit-remaining-tokens', '199927'), ('x-ratelimit-reset-requests', '3m5.484s'), ('x-ratelimit-reset-tokens', '21ms'), ('x-request-id', 'req_41e28efe203141c699c8b06ea82477d6'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=nT5Iskiz6FUbzIG51auE7yT_LFUuSqhsPG9WiY3AgAE-1761776260-1.0.1.1-jrX_SJSXWeroVw2IkS2MVZrUfzjvzXsRHqpeVIbK96Swa3gaVW7xkkPVi52K545vOrQlfRzigQfUiOuUjAW4L5rP5rhNgvR1c8AynqjwkoE; path=/; expires=Wed, 29-Oct-25 22:47:40 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=1r9b8cVmg7gKPP8mJRTV5pEl7Z4Q0RfqBS9fzQsGN4g-1761776260335-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '99660b55dd6466fb-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_41e28efe203141c699c8b06ea82477d6
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: HOLD (conf: 0.30) - Sentiment: Market conditions are uncertain, and there is no strong indication for a significant price movement.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=0, hold_weight=2.8, raw_score=0.84
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: HOLD (conf: 0.30)
INFO     root:strategy_manager.py:209 [StrategyManager] Confidence 0.30 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to tests/test_logs/strategy_signals.jsonl
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-64fcdf6f-9abe-490d-af1e-f8e81b5b04d0', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test headline" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d32059c2f0>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x79d3205b7ed0> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d32059e720>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 Oct 2025 22:17:41 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'845'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'857'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9977'), (b'x-ratelimit-remaining-tokens', b'199927'), (b'x-ratelimit-reset-requests', b'3m12.781s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_82750c58b46c4d9e8da1ceb95d39fc79'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=Xr0t337GPIaKYtpcTXToOqoc9Z.xOjrKcVHIgr3YWbI-1761776261-1.0.1.1-1vd2emN3rHZ5.XGb.PTL_3R97zQzfvTinHiqoipxKjsJiJtanX8dMBCalP6sBKund8pXwgYDMYiRlrc2YzR6TUtQ3y23qb2DXZrbboAxNfc; path=/; expires=Wed, 29-Oct-25 22:47:41 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=V4PaKkPLmbZ_fxaM7gV04uw6CzAXBI4Y8xY2vmz4Czg-1761776261762-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'99660b5e5a96e93a-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Wed, 29 Oct 2025 22:17:41 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '845'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '857'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9977'), ('x-ratelimit-remaining-tokens', '199927'), ('x-ratelimit-reset-requests', '3m12.781s'), ('x-ratelimit-reset-tokens', '21ms'), ('x-request-id', 'req_82750c58b46c4d9e8da1ceb95d39fc79'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=Xr0t337GPIaKYtpcTXToOqoc9Z.xOjrKcVHIgr3YWbI-1761776261-1.0.1.1-1vd2emN3rHZ5.XGb.PTL_3R97zQzfvTinHiqoipxKjsJiJtanX8dMBCalP6sBKund8pXwgYDMYiRlrc2YzR6TUtQ3y23qb2DXZrbboAxNfc; path=/; expires=Wed, 29-Oct-25 22:47:41 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=V4PaKkPLmbZ_fxaM7gV04uw6CzAXBI4Y8xY2vmz4Czg-1761776261762-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '99660b5e5a96e93a-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_82750c58b46c4d9e8da1ceb95d39fc79
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: HOLD (conf: 0.30) - Sentiment: Market conditions are uncertain, and there is no clear indication of a strong upward or downward trend.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=0, hold_weight=2.8, raw_score=0.84
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: HOLD (conf: 0.30)
INFO     root:strategy_manager.py:209 [StrategyManager] Confidence 0.30 below threshold 0.5, converting to HOLD
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-b0ed1bff-8023-4041-bdac-afee3d3a0bc3', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test headline" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 Oct 2025 22:17:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'992'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1019'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9976'), (b'x-ratelimit-remaining-tokens', b'199927'), (b'x-ratelimit-reset-requests', b'3m20.434s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_effee2fbe33943589abd14c08e7208e2'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'99660b647988e93a-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 29 Oct 2025 22:17:42 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '992', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1019', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9976', 'x-ratelimit-remaining-tokens': '199927', 'x-ratelimit-reset-requests': '3m20.434s', 'x-ratelimit-reset-tokens': '21ms', 'x-request-id': 'req_effee2fbe33943589abd14c08e7208e2', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '99660b647988e93a-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_effee2fbe33943589abd14c08e7208e2
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: HOLD (conf: 0.30) - Sentiment: Market conditions are uncertain, and recent trends suggest stability rather than significant movement.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=0, hold_weight=2.8, raw_score=0.84
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: HOLD (conf: 0.30)
INFO     root:strategy_manager.py:209 [StrategyManager] Confidence 0.30 below threshold 0.5, converting to HOLD
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1d5c7608-ec38-4511-8e97-70d1d77aee4e', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test headline" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 Oct 2025 22:17:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'813'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'827'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9975'), (b'x-ratelimit-remaining-tokens', b'199927'), (b'x-ratelimit-reset-requests', b'3m27.881s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_6b2bca2877db4313b83e32d47bdc2665'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'99660b6be9d3e93a-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 29 Oct 2025 22:17:43 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '813', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '827', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9975', 'x-ratelimit-remaining-tokens': '199927', 'x-ratelimit-reset-requests': '3m27.881s', 'x-ratelimit-reset-tokens': '21ms', 'x-request-id': 'req_6b2bca2877db4313b83e32d47bdc2665', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '99660b6be9d3e93a-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_6b2bca2877db4313b83e32d47bdc2665
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: HOLD (conf: 0.30) - Sentiment: Market conditions are uncertain and there is no clear indication of a strong upward or downward trend.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=0, hold_weight=2.8, raw_score=0.84
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: HOLD (conf: 0.30)
INFO     root:strategy_manager.py:209 [StrategyManager] Confidence 0.30 below threshold 0.5, converting to HOLD
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-5bc69462-0933-4bd4-a201-69e10aff121c', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test headline" and the crypto symbol ETHUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 Oct 2025 22:17:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'890'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'911'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9975'), (b'x-ratelimit-remaining-tokens', b'199927'), (b'x-ratelimit-reset-requests', b'3m35.508s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_53f7b9b140574e3c83a64e0baeb085d6'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'99660b724928e93a-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 29 Oct 2025 22:17:44 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '890', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '911', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9975', 'x-ratelimit-remaining-tokens': '199927', 'x-ratelimit-reset-requests': '3m35.508s', 'x-ratelimit-reset-tokens': '21ms', 'x-request-id': 'req_53f7b9b140574e3c83a64e0baeb085d6', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '99660b724928e93a-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_53f7b9b140574e3c83a64e0baeb085d6
INFO     root:strategy_manager.py:141 [sentiment] ETHUSD: HOLD (conf: 0.30) - Sentiment: Market conditions are uncertain, and there are no strong indicators for a significant price movement.
INFO     root:strategy_manager.py:141 [technical] ETHUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] ETHUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=0, hold_weight=2.8, raw_score=0.84
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for ETHUSD: HOLD (conf: 0.30)
INFO     root:strategy_manager.py:209 [StrategyManager] Confidence 0.30 below threshold 0.5, converting to HOLD
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c210c49b-5bea-4f88-8f17-d055a89e8a85', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test headline" and the crypto symbol ETHUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 Oct 2025 22:17:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'890'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'903'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9975'), (b'x-ratelimit-remaining-tokens', b'199927'), (b'x-ratelimit-reset-requests', b'3m34.499s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_7d2ec596ff2641f4a77c1319cc4f1dec'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'99660b78882ae93a-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 29 Oct 2025 22:17:46 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '890', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '903', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9975', 'x-ratelimit-remaining-tokens': '199927', 'x-ratelimit-reset-requests': '3m34.499s', 'x-ratelimit-reset-tokens': '21ms', 'x-request-id': 'req_7d2ec596ff2641f4a77c1319cc4f1dec', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '99660b78882ae93a-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_7d2ec596ff2641f4a77c1319cc4f1dec
INFO     root:strategy_manager.py:141 [sentiment] ETHUSD: HOLD (conf: 0.30) - Sentiment: Market conditions are uncertain, and there is no clear indication of a strong upward or downward trend.
INFO     root:strategy_manager.py:141 [technical] ETHUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] ETHUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=0, hold_weight=2.8, raw_score=0.84
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for ETHUSD: HOLD (conf: 0.30)
INFO     root:strategy_manager.py:209 [StrategyManager] Confidence 0.30 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: BUY (conf: 0.60) - Sentiment: Keyword match (positive): Bitcoin adoption growing
INFO     root:strategy_manager.py:141 [technical] BTCUSD: SELL (conf: 0.47) - Technical: SMA: HOLD, RSI: SELL, Momentum: SELL
INFO     root:strategy_manager.py:141 [volume] BTCUSD: BUY (conf: 0.20) - Volume: Normal volume | No clear volume-price pattern | OBV rising (accumulation)
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=BUY, actionable_weight=2.8, hold_weight=0, raw_score=0.76
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.27)
INFO     root:strategy_manager.py:209 [StrategyManager] Confidence 0.27 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: BUY (conf: 0.80) - Sentiment: Keyword match (positive): Bitcoin bullish
INFO     root:strategy_manager.py:141 [technical] BTCUSD: SELL (conf: 0.47) - Technical: SMA: HOLD, RSI: SELL, Momentum: SELL
INFO     root:strategy_manager.py:141 [volume] BTCUSD: BUY (conf: 0.20) - Volume: Normal volume | No clear volume-price pattern | OBV rising (accumulation)
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=BUY, actionable_weight=2.8, hold_weight=0, raw_score=0.9600000000000001
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.34)
INFO     root:strategy_manager.py:209 [StrategyManager] Confidence 0.34 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-092f7167-34fc-4f53-9fe4-d3840025aa91', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test headline" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d32059e1b0>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x79d3205b77d0> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d32059f3b0>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 Oct 2025 22:17:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'1311'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1326'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9973'), (b'x-ratelimit-remaining-tokens', b'199927'), (b'x-ratelimit-reset-requests', b'3m50.53s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_a8088ba46a5a454abab9861fbe43342c'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=anK.UrTImHRM0KWeomlTv1sXKbi1_dFWikOboOBrvyE-1761776267-1.0.1.1-QHY5uSDPOC6dOnXDLJGyJ6DJDGzO1A9wD5L5.FuQO9wGXg85RMWbI0TFTSlGk3BQJjKPWgwAU8q1bEJm200YnIIBzhwGgQVltn177uq86YU; path=/; expires=Wed, 29-Oct-25 22:47:47 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=dxL3fL.61cchI.GvIUIoVnjCc9Ei6kzkwu4brc6FLX0-1761776267733-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'99660b800f8247a5-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Wed, 29 Oct 2025 22:17:47 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '1311'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1326'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9973'), ('x-ratelimit-remaining-tokens', '199927'), ('x-ratelimit-reset-requests', '3m50.53s'), ('x-ratelimit-reset-tokens', '21ms'), ('x-request-id', 'req_a8088ba46a5a454abab9861fbe43342c'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=anK.UrTImHRM0KWeomlTv1sXKbi1_dFWikOboOBrvyE-1761776267-1.0.1.1-QHY5uSDPOC6dOnXDLJGyJ6DJDGzO1A9wD5L5.FuQO9wGXg85RMWbI0TFTSlGk3BQJjKPWgwAU8q1bEJm200YnIIBzhwGgQVltn177uq86YU; path=/; expires=Wed, 29-Oct-25 22:47:47 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=dxL3fL.61cchI.GvIUIoVnjCc9Ei6kzkwu4brc6FLX0-1761776267733-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '99660b800f8247a5-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_a8088ba46a5a454abab9861fbe43342c
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: HOLD (conf: 0.30) - Sentiment: Market conditions are uncertain, and there is no strong indication of a clear upward or downward trend.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: SELL (conf: 0.27) - Technical: SMA: HOLD, RSI: SELL, Momentum: HOLD
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.30) - Volume: Normal volume | No clear volume-price pattern | OBV neutral
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=1.0, hold_weight=1.8, raw_score=0.54
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: HOLD (conf: 0.19)
INFO     root:strategy_manager.py:209 [StrategyManager] Confidence 0.19 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
WARNING  root:strategy_manager.py:119 [StrategyManager] Unknown symbol format: SYMBOL0/USD, using as-is
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-3be6dde7-070a-4fec-a768-b57d72447915', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test" and the crypto symbol SYMBOL0/USD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d3203d99d0>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x79d3205b6fd0> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d3203d9e20>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 Oct 2025 22:17:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'789'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'802'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9972'), (b'x-ratelimit-remaining-tokens', b'199928'), (b'x-ratelimit-reset-requests', b'3m57.564s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_cd095a1fba864e5a92caef5e4b879e48'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=GRb799lVj4g6fcajspA7hA1fWppwVB515Ion4.h9880-1761776268-1.0.1.1-li6w85VoNgd4ayhKrRiSornz_nqEBITadwgD5ToZ2S.3fXfaUxYe_eyCpBGpbJSAkZEjBH499Nu2DYQJAs4q9rqSK35VBLKBPuIYxRWEPlQ; path=/; expires=Wed, 29-Oct-25 22:47:48 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=zWn1l281RhHC13ONBI4WTOVnrXLPJPJAslJuSvoNubs-1761776268759-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'99660b8a7b6fb650-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Wed, 29 Oct 2025 22:17:48 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '789'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '802'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9972'), ('x-ratelimit-remaining-tokens', '199928'), ('x-ratelimit-reset-requests', '3m57.564s'), ('x-ratelimit-reset-tokens', '21ms'), ('x-request-id', 'req_cd095a1fba864e5a92caef5e4b879e48'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=GRb799lVj4g6fcajspA7hA1fWppwVB515Ion4.h9880-1761776268-1.0.1.1-li6w85VoNgd4ayhKrRiSornz_nqEBITadwgD5ToZ2S.3fXfaUxYe_eyCpBGpbJSAkZEjBH499Nu2DYQJAs4q9rqSK35VBLKBPuIYxRWEPlQ; path=/; expires=Wed, 29-Oct-25 22:47:48 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=zWn1l281RhHC13ONBI4WTOVnrXLPJPJAslJuSvoNubs-1761776268759-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '99660b8a7b6fb650-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_cd095a1fba864e5a92caef5e4b879e48
INFO     root:strategy_manager.py:141 [sentiment] SYMBOL0/USD: HOLD (conf: 0.30) - Sentiment: Insufficient information to determine a clear trend or market direction.
INFO     root:strategy_manager.py:141 [technical] SYMBOL0/USD: SELL (conf: 0.27) - Technical: SMA: HOLD, RSI: SELL, Momentum: HOLD
INFO     root:strategy_manager.py:141 [volume] SYMBOL0/USD: HOLD (conf: 0.30) - Volume: Normal volume | No clear volume-price pattern | OBV neutral
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=1.0, hold_weight=1.8, raw_score=0.54
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for SYMBOL0/USD: HOLD (conf: 0.19)
INFO     root:strategy_manager.py:209 [StrategyManager] Confidence 0.19 below threshold 0.5, converting to HOLD
WARNING  root:strategy_manager.py:119 [StrategyManager] Unknown symbol format: SYMBOL1/USD, using as-is
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-2c53a4bc-9aee-405c-9db3-bfd94d7d6e49', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test" and the crypto symbol SYMBOL1/USD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 Oct 2025 22:17:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'1042'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1254'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9995'), (b'x-ratelimit-remaining-tokens', b'199928'), (b'x-ratelimit-reset-requests', b'37.511s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_14795a0632694e98b50a326e7482447c'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'99660b8ff837b650-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 29 Oct 2025 22:17:50 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '1042', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1254', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9995', 'x-ratelimit-remaining-tokens': '199928', 'x-ratelimit-reset-requests': '37.511s', 'x-ratelimit-reset-tokens': '21ms', 'x-request-id': 'req_14795a0632694e98b50a326e7482447c', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '99660b8ff837b650-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_14795a0632694e98b50a326e7482447c
INFO     root:strategy_manager.py:141 [sentiment] SYMBOL1/USD: HOLD (conf: 0.30) - Sentiment: Insufficient information to determine a clear trend or market sentiment.
INFO     root:strategy_manager.py:141 [technical] SYMBOL1/USD: SELL (conf: 0.27) - Technical: SMA: HOLD, RSI: SELL, Momentum: HOLD
INFO     root:strategy_manager.py:141 [volume] SYMBOL1/USD: HOLD (conf: 0.30) - Volume: Normal volume | No clear volume-price pattern | OBV neutral
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=1.0, hold_weight=1.8, raw_score=0.54
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for SYMBOL1/USD: HOLD (conf: 0.19)
INFO     root:strategy_manager.py:209 [StrategyManager] Confidence 0.19 below threshold 0.5, converting to HOLD
WARNING  root:strategy_manager.py:119 [StrategyManager] Unknown symbol format: SYMBOL2/USD, using as-is
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-2de981cf-6b26-48d9-9e6b-85589bbbb7e0', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test" and the crypto symbol SYMBOL2/USD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 Oct 2025 22:17:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'531'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'546'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9970'), (b'x-ratelimit-remaining-tokens', b'199928'), (b'x-ratelimit-reset-requests', b'4m12.581s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_12582298c8cf4959827981f335539809'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'99660b988fa8b650-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 29 Oct 2025 22:17:50 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '531', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '546', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9970', 'x-ratelimit-remaining-tokens': '199928', 'x-ratelimit-reset-requests': '4m12.581s', 'x-ratelimit-reset-tokens': '21ms', 'x-request-id': 'req_12582298c8cf4959827981f335539809', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '99660b988fa8b650-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_12582298c8cf4959827981f335539809
INFO     root:strategy_manager.py:141 [sentiment] SYMBOL2/USD: HOLD (conf: 0.30) - Sentiment: Insufficient information to make a decisive trading decision.
INFO     root:strategy_manager.py:141 [technical] SYMBOL2/USD: SELL (conf: 0.27) - Technical: SMA: HOLD, RSI: SELL, Momentum: HOLD
INFO     root:strategy_manager.py:141 [volume] SYMBOL2/USD: HOLD (conf: 0.30) - Volume: Normal volume | No clear volume-price pattern | OBV neutral
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=1.0, hold_weight=1.8, raw_score=0.54
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for SYMBOL2/USD: HOLD (conf: 0.19)
INFO     root:strategy_manager.py:209 [StrategyManager] Confidence 0.19 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1e885134-70d6-43ba-82f0-93480695c778', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Bitcoin positive news" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d3203d97f0>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x79d3205b66d0> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d3203d91c0>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 Oct 2025 22:17:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'1244'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1272'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9970'), (b'x-ratelimit-remaining-tokens', b'199925'), (b'x-ratelimit-reset-requests', b'4m11.77s'), (b'x-ratelimit-reset-tokens', b'22ms'), (b'x-request-id', b'req_19def2364b1440f2b00f0b59b0f9695e'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=J6xWcaoLHG2FkFIwH.t3AvsxUsiZbg3kdAY30iN4f_M-1761776272-1.0.1.1-UAFk4qKQDcVAWkjffeRrYnUX0xFuxSzknXqY3TE4GIRPLzmzqb0lE5pFS_pmWtc3CNo_Nz4k3VcPEIqzKvWjWxICBxDgFxkFAwv7Lg2BlxE; path=/; expires=Wed, 29-Oct-25 22:47:52 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=fDXh8JJdNTwWDWE8EC1kDB6mjehJ70LHk0awnCjyUhA-1761776272378-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'99660b9d8eb84871-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Wed, 29 Oct 2025 22:17:52 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '1244'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1272'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9970'), ('x-ratelimit-remaining-tokens', '199925'), ('x-ratelimit-reset-requests', '4m11.77s'), ('x-ratelimit-reset-tokens', '22ms'), ('x-request-id', 'req_19def2364b1440f2b00f0b59b0f9695e'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=J6xWcaoLHG2FkFIwH.t3AvsxUsiZbg3kdAY30iN4f_M-1761776272-1.0.1.1-UAFk4qKQDcVAWkjffeRrYnUX0xFuxSzknXqY3TE4GIRPLzmzqb0lE5pFS_pmWtc3CNo_Nz4k3VcPEIqzKvWjWxICBxDgFxkFAwv7Lg2BlxE; path=/; expires=Wed, 29-Oct-25 22:47:52 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=fDXh8JJdNTwWDWE8EC1kDB6mjehJ70LHk0awnCjyUhA-1761776272378-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '99660b9d8eb84871-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_19def2364b1440f2b00f0b59b0f9695e
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: BUY (conf: 0.60) - Sentiment: Positive news typically boosts market sentiment, likely leading to an increase in Bitcoin's value.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: SELL (conf: 0.47) - Technical: SMA: HOLD, RSI: SELL, Momentum: SELL
INFO     root:strategy_manager.py:141 [volume] BTCUSD: BUY (conf: 0.20) - Volume: Normal volume | No clear volume-price pattern | OBV rising (accumulation)
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=BUY, actionable_weight=2.8, hold_weight=0, raw_score=0.76
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.27)
INFO     root:strategy_manager.py:209 [StrategyManager] Confidence 0.27 below threshold 0.5, converting to HOLD
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-8238c3e5-26f1-47fa-b0d3-d2b487d469fd', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Bitcoin positive news" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 Oct 2025 22:17:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'928'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'942'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9969'), (b'x-ratelimit-remaining-tokens', b'199925'), (b'x-ratelimit-reset-requests', b'4m27.583s'), (b'x-ratelimit-reset-tokens', b'22ms'), (b'x-request-id', b'req_2fb14f61a4164e9e9f192a09c6eb7931'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'99660ba6992c4871-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 29 Oct 2025 22:17:53 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '928', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '942', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9969', 'x-ratelimit-remaining-tokens': '199925', 'x-ratelimit-reset-requests': '4m27.583s', 'x-ratelimit-reset-tokens': '22ms', 'x-request-id': 'req_2fb14f61a4164e9e9f192a09c6eb7931', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '99660ba6992c4871-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_2fb14f61a4164e9e9f192a09c6eb7931
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: BUY (conf: 0.60) - Sentiment: Positive news typically boosts market sentiment, leading to potential price increases.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: SELL (conf: 0.47) - Technical: SMA: HOLD, RSI: SELL, Momentum: SELL
INFO     root:strategy_manager.py:141 [volume] BTCUSD: BUY (conf: 0.20) - Volume: Normal volume | No clear volume-price pattern | OBV rising (accumulation)
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=BUY, actionable_weight=2.8, hold_weight=0, raw_score=0.76
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.27)
INFO     root:strategy_manager.py:209 [StrategyManager] Confidence 0.27 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
WARNING  root:strategy_manager.py:205 ⚠️  Signal logging failed: Simulated logging failure
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-bd335263-4784-458c-ab6b-29df183850d8', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d3203eddc0>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x79d3203c90d0> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d3203ed220>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 Oct 2025 22:17:56 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'1084'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1127'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9967'), (b'x-ratelimit-remaining-tokens', b'199930'), (b'x-ratelimit-reset-requests', b'4m42.338s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_da5055de2e0b41ff8be41de93bfe62d9'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=GEO8ddIpSLiqNQq2g5TxjSHTMs39Zx7ibGlkPFntKmg-1761776276-1.0.1.1-H_GJYhZ7rq4cRMEACd94KwWilrcmtjjv4Sg0AJANzAqbnWx8qyaPZiBb.KapJro.Wn6Oa6iL2o4DI2VgrY1lVMm6FCs_8Uwg_UqDDWUV1tg; path=/; expires=Wed, 29-Oct-25 22:47:56 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=DMo5rdObFg66VuA0RVBTI36Ze10hInATqN4fVf3cNx4-1761776276160-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'99660bb66804f0bc-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Wed, 29 Oct 2025 22:17:56 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '1084'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1127'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9967'), ('x-ratelimit-remaining-tokens', '199930'), ('x-ratelimit-reset-requests', '4m42.338s'), ('x-ratelimit-reset-tokens', '21ms'), ('x-request-id', 'req_da5055de2e0b41ff8be41de93bfe62d9'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=GEO8ddIpSLiqNQq2g5TxjSHTMs39Zx7ibGlkPFntKmg-1761776276-1.0.1.1-H_GJYhZ7rq4cRMEACd94KwWilrcmtjjv4Sg0AJANzAqbnWx8qyaPZiBb.KapJro.Wn6Oa6iL2o4DI2VgrY1lVMm6FCs_8Uwg_UqDDWUV1tg; path=/; expires=Wed, 29-Oct-25 22:47:56 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=DMo5rdObFg66VuA0RVBTI36Ze10hInATqN4fVf3cNx4-1761776276160-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '99660bb66804f0bc-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_da5055de2e0b41ff8be41de93bfe62d9
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: HOLD (conf: 0.30) - Sentiment: Market conditions are uncertain, and there is no clear indication of a strong upward or downward trend.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: HOLD (conf: 0.00) - No price data available
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.00) - No volume data available
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=0, hold_weight=2.8, raw_score=0.3
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: HOLD (conf: 0.11)
INFO     root:strategy_manager.py:209 [StrategyManager] Confidence 0.11 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-55be25d8-7cfb-4212-b6ea-1d7f760989ac', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Bitcoin is rising" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d3203ef3e0>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x79d3203c9d50> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d3203ef260>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 Oct 2025 22:17:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'884'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'898'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9966'), (b'x-ratelimit-remaining-tokens', b'199926'), (b'x-ratelimit-reset-requests', b'4m49.584s'), (b'x-ratelimit-reset-tokens', b'22ms'), (b'x-request-id', b'req_406055caf1984af388282dca8609b42c'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=DC.NR3.uonbeQvDWdx7pQjhH4z1ETzoFKmhcjnax0R0-1761776277-1.0.1.1-mM4YWSl8LDDBIWMW8bBLmcYcknHXIjQfwl4C7mWnG4cqIRt7TQ.3DLs.WGPkUAsad9bRu6dw7cgoW49A7yY1XnZVdEvMYrQMto8PXfMoHTg; path=/; expires=Wed, 29-Oct-25 22:47:57 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=tsDTTV9.Kuc6ZvxRbOFZ4_nbMedug8_k6jd3JR2ym9w-1761776277354-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'99660bbf3e1a474c-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Wed, 29 Oct 2025 22:17:57 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '884'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '898'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9966'), ('x-ratelimit-remaining-tokens', '199926'), ('x-ratelimit-reset-requests', '4m49.584s'), ('x-ratelimit-reset-tokens', '22ms'), ('x-request-id', 'req_406055caf1984af388282dca8609b42c'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=DC.NR3.uonbeQvDWdx7pQjhH4z1ETzoFKmhcjnax0R0-1761776277-1.0.1.1-mM4YWSl8LDDBIWMW8bBLmcYcknHXIjQfwl4C7mWnG4cqIRt7TQ.3DLs.WGPkUAsad9bRu6dw7cgoW49A7yY1XnZVdEvMYrQMto8PXfMoHTg; path=/; expires=Wed, 29-Oct-25 22:47:57 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=tsDTTV9.Kuc6ZvxRbOFZ4_nbMedug8_k6jd3JR2ym9w-1761776277354-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '99660bbf3e1a474c-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_406055caf1984af388282dca8609b42c
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: BUY (conf: 0.60) - Sentiment: The headline indicates a positive trend in Bitcoin's price, suggesting potential for profit.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: SELL (conf: 0.47) - Technical: SMA: HOLD, RSI: SELL, Momentum: SELL
INFO     root:strategy_manager.py:141 [volume] BTCUSD: BUY (conf: 0.20) - Volume: Normal volume | No clear volume-price pattern | OBV rising (accumulation)
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=BUY, actionable_weight=2.8, hold_weight=0, raw_score=0.76
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.27)
INFO     root:strategy_manager.py:209 [StrategyManager] Confidence 0.27 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ec3598f0-ce2b-41cb-addf-b60daf496d3a', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d32059ffb0>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x79d3203c8250> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d32059f290>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 Oct 2025 22:17:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'1466'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1496'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9965'), (b'x-ratelimit-remaining-tokens', b'199930'), (b'x-ratelimit-reset-requests', b'4m57.013s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_d642860428ca43358b5420371164a58a'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=.dsDeC.4WbwtIVbX2kqey7t8c0DZElMDYtCuFNng_9s-1761776279-1.0.1.1-RhHhoLBZDrBUAiu7JLX5Q6EJ7psoCkXXLcJtMGt4IYbv8MOqrq4vv7NSRAW_Aq8c8gTJL_UmZc8AWA2J_FeY_CKMmfvAlMBjjeUv4YBJpHc; path=/; expires=Wed, 29-Oct-25 22:47:59 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=Tv30ceyWh9KpV60x8ww8kfMSIEH0Jx2ejuPWdDltpoQ-1761776279144-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'99660bc6cb6bf05c-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Wed, 29 Oct 2025 22:17:59 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '1466'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1496'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9965'), ('x-ratelimit-remaining-tokens', '199930'), ('x-ratelimit-reset-requests', '4m57.013s'), ('x-ratelimit-reset-tokens', '21ms'), ('x-request-id', 'req_d642860428ca43358b5420371164a58a'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=.dsDeC.4WbwtIVbX2kqey7t8c0DZElMDYtCuFNng_9s-1761776279-1.0.1.1-RhHhoLBZDrBUAiu7JLX5Q6EJ7psoCkXXLcJtMGt4IYbv8MOqrq4vv7NSRAW_Aq8c8gTJL_UmZc8AWA2J_FeY_CKMmfvAlMBjjeUv4YBJpHc; path=/; expires=Wed, 29-Oct-25 22:47:59 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=Tv30ceyWh9KpV60x8ww8kfMSIEH0Jx2ejuPWdDltpoQ-1761776279144-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '99660bc6cb6bf05c-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_d642860428ca43358b5420371164a58a
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: HOLD (conf: 0.30) - Sentiment: Market conditions are uncertain and no significant news indicates a clear direction.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: SELL (conf: 0.27) - Technical: SMA: HOLD, RSI: SELL, Momentum: HOLD
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.30) - Volume: Normal volume | No clear volume-price pattern | OBV neutral
INFO     root:strategy_manager.py:254 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=1.0, hold_weight=1.8, raw_score=0.54
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: HOLD (conf: 0.19)
INFO     root:strategy_manager.py:209 [StrategyManager] Confidence 0.19 below threshold 0.5, converting to HOLD
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
ERROR    app.strategy_signal_logger:strategy_signal_logger.py:358 Failed to clear old signals from database: 'SignalRepository' object has no attribute 'get_all'
ERROR    app.strategy_signal_logger:strategy_signal_logger.py:358 Failed to clear old signals from database: 'SignalRepository' object has no attribute 'get_all'
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY LINKUSD | signal_id=1
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY LINKUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY ADAUSD | signal_id=1
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY ADAUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, SELL ADAUSD | signal_id=2
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: SELL ADAUSD
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     root:dashboard.py:434 [Balance] Paper trading: $200.00 (P&L: $+0.00)
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
DEBUG    urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): api.kraken.com:443
DEBUG    urllib3.connectionpool:connectionpool.py:544 https://api.kraken.com:443 "POST /0/private/Balance HTTP/1.1" 200 41
INFO     root:kraken.py:38 [KrakenClient] Balance API response keys: ['ZUSD']
INFO     root:kraken.py:39 [KrakenClient] Full balances: {'ZUSD': '200.0000'}
INFO     root:dashboard.py:457 [Balance] Real Kraken balance: $200.00 (available for live trading)
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/balance "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/holdings "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/holdings "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/holdings "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/holdings "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/signals/latest "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/signals/latest "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/signals/latest "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1216 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/trades/all "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1216 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/trades/all "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1216 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/trades/all "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1216 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/trades/all "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1216 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/trades/all "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/holdings "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/holdings "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-9cb61836-eab3-46fb-902e-cf7d49405d3e', 'json_data': {'messages': [{'role': 'user', 'content': 'test'}], 'model': 'gpt-3.5-turbo', 'max_tokens': 5}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d320a794c0>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x79d320452650> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x79d320c56b10>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 Oct 2025 22:18:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'323'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'365'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199997'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_d05f59987de1429f940ba7c62c07f425'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=CCkXn0wmPxMvKCspigd1nSJpuOylRwgtJBbkHA_vC0A-1761776281-1.0.1.1-.epQyBDmXXzJuxvKMIRnKFlmGaJua4sF4bvUVYKxsBqixMqLNRdmmVp_zk6pbUQYOxzlfQrlhxdtvJWERxhcmHp2DwxoykLzRfA9LnBDQZw; path=/; expires=Wed, 29-Oct-25 22:48:01 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=nOclCcGFPPUhVZiKWeD1GzX37ohnWkcxhW96S.wFLi8-1761776281803-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'99660bde5a82f092-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Wed, 29 Oct 2025 22:18:01 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '323'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '365'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '199997'), ('x-ratelimit-reset-requests', '8.64s'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_d05f59987de1429f940ba7c62c07f425'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=CCkXn0wmPxMvKCspigd1nSJpuOylRwgtJBbkHA_vC0A-1761776281-1.0.1.1-.epQyBDmXXzJuxvKMIRnKFlmGaJua4sF4bvUVYKxsBqixMqLNRdmmVp_zk6pbUQYOxzlfQrlhxdtvJWERxhcmHp2DwxoykLzRfA9LnBDQZw; path=/; expires=Wed, 29-Oct-25 22:48:01 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=nOclCcGFPPUhVZiKWeD1GzX37ohnWkcxhW96S.wFLi8-1761776281803-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '99660bde5a82f092-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_d05f59987de1429f940ba7c62c07f425
DEBUG    urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): api.kraken.com:443
DEBUG    urllib3.connectionpool:connectionpool.py:544 https://api.kraken.com:443 "GET /0/public/Ticker?pair=BTCUSD HTTP/1.1" 200 None
INFO     root:dashboard.py:157 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/health "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-3ed7819a-f236-4bdb-95e2-563341b719b1', 'json_data': {'messages': [{'role': 'user', 'content': 'test'}], 'model': 'gpt-3.5-turbo', 'max_tokens': 5}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 Oct 2025 22:18:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'538'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'559'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'199997'), (b'x-ratelimit-reset-requests', b'16.2s'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_ad96645b4f7348e5927775d57af34da9'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'99660be56c7ff092-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 29 Oct 2025 22:18:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '538', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '559', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9998', 'x-ratelimit-remaining-tokens': '199997', 'x-ratelimit-reset-requests': '16.2s', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_ad96645b4f7348e5927775d57af34da9', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '99660be56c7ff092-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_ad96645b4f7348e5927775d57af34da9
DEBUG    urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): api.kraken.com:443
DEBUG    urllib3.connectionpool:connectionpool.py:544 https://api.kraken.com:443 "GET /0/public/Ticker?pair=BTCUSD HTTP/1.1" 200 None
INFO     root:dashboard.py:157 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/health/detailed "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:157 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:157 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:157 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1216 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/trades/all "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/holdings "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     root:dashboard.py:434 [Balance] Paper trading: $200.00 (P&L: $+0.00)
DEBUG    urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): api.kraken.com:443
DEBUG    urllib3.connectionpool:connectionpool.py:544 https://api.kraken.com:443 "POST /0/private/Balance HTTP/1.1" 200 41
INFO     root:kraken.py:38 [KrakenClient] Balance API response keys: ['ZUSD']
INFO     root:kraken.py:39 [KrakenClient] Full balances: {'ZUSD': '200.0000'}
INFO     root:dashboard.py:457 [Balance] Real Kraken balance: $200.00 (available for live trading)
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/balance "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/holdings "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/signals/latest "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1216 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/trades/all "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-87c8ebc3-e293-4e9e-939d-1e7f2892d349', 'json_data': {'messages': [{'role': 'user', 'content': 'test'}], 'model': 'gpt-3.5-turbo', 'max_tokens': 5}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 29 Oct 2025 22:18:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'234'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'304'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9997'), (b'x-ratelimit-remaining-tokens', b'199997'), (b'x-ratelimit-reset-requests', b'23.535s'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_103b0677313d417887390be08e412e30'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'99660bed7a4df092-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 29 Oct 2025 22:18:04 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '234', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '304', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9997', 'x-ratelimit-remaining-tokens': '199997', 'x-ratelimit-reset-requests': '23.535s', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_103b0677313d417887390be08e412e30', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '99660bed7a4df092-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_103b0677313d417887390be08e412e30
DEBUG    urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): api.kraken.com:443
DEBUG    urllib3.connectionpool:connectionpool.py:544 https://api.kraken.com:443 "GET /0/public/Ticker?pair=BTCUSD HTTP/1.1" 200 None
INFO     root:dashboard.py:157 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/health "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:157 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
