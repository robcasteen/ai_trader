INFO     app.database.connection:connection.py:85 Initializing database at: /home/rcasteen/kraken-ai-bot/data/trading_bot.db
INFO     app.database.connection:connection.py:87 Database initialized successfully
INFO     app.database.connection:connection.py:90 Database location: /home/rcasteen/kraken-ai-bot/data/trading_bot.db
INFO     app.database.connection:connection.py:91 Database size: 2711552 bytes
DEBUG    tzlocal:unix.py:61 /etc/timezone found, contents:
 America/Chicago

DEBUG    tzlocal:unix.py:120 /etc/localtime found
DEBUG    tzlocal:unix.py:136 2 found:
 {'/etc/timezone': 'America/Chicago', '/etc/localtime is a symlink to': 'America/Chicago'}
INFO     root:main.py:276 [Startup] Signal handlers registered
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/summary "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/summary "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:675 [Dashboard] Loaded 2 current signals from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/current "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:675 [Dashboard] Loaded 0 current signals from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/current "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/history "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/history?limit=5 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/history?symbol=BTC/USD "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/history?limit=invalid "HTTP/1.1 400 Bad Request"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/history?limit=5000 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:780 [Dashboard] Calculated performance for 3 strategies from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance?lookback_days=30 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance?lookback_days=invalid "HTTP/1.1 400 Bad Request"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:780 [Dashboard] Calculated performance for 3 strategies from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance?lookback_days=365 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance/technical "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance/nonexistent "HTTP/1.1 404 Not Found"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/correlation "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/correlation "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/signals/latest "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/signals/latest "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/summary "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:675 [Dashboard] Loaded 2 current signals from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/current "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/history "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:780 [Dashboard] Calculated performance for 3 strategies from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/performance/technical "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/correlation "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/signals/latest "HTTP/1.1 200 OK"
INFO     root:balance_reconciliation.py:45 [BalanceRecon] Exchange balance updated: $200.00 → $195.50
INFO     root:balance_reconciliation.py:63 [BalanceRecon] Trade recorded: BUY $501.30, calculated balance: $-301.30
INFO     root:balance_reconciliation.py:63 [BalanceRecon] Trade recorded: BUY $50.00, calculated balance: $150.00
INFO     root:balance_reconciliation.py:45 [BalanceRecon] Exchange balance updated: $200.00 → $149.50
INFO     root:balance_reconciliation.py:45 [BalanceRecon] Exchange balance updated: $200.00 → $195.50
INFO     root:balance_reconciliation.py:45 [BalanceRecon] Exchange balance updated: $200.00 → $195.50
INFO     root:balance_reconciliation.py:63 [BalanceRecon] Trade recorded: BUY $2.00, calculated balance: $198.00
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2078 [Config] Saved to database: mode=paper, min_confidence=0.5, position_size=5.0
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.CONFIG_CHANGED to 0 subscribers
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2078 [Config] Saved to database: mode=paper, min_confidence=0.6, position_size=5.0
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.CONFIG_CHANGED to 0 subscribers
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2078 [Config] Saved to database: mode=paper, min_confidence=0.5, position_size=5.0
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.CONFIG_CHANGED to 0 subscribers
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 400 Bad Request"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2078 [Config] Saved to database: mode=paper, min_confidence=0.5, position_size=5.0
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.CONFIG_CHANGED to 0 subscribers
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2078 [Config] Saved to database: mode=live, min_confidence=0.5, position_size=5.0
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.CONFIG_CHANGED to 0 subscribers
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2078 [Config] Saved to database: mode=paper, min_confidence=0.5, position_size=5.0
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.CONFIG_CHANGED to 0 subscribers
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2078 [Config] Saved to database: mode=paper, min_confidence=0.5, position_size=5.0
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.CONFIG_CHANGED to 0 subscribers
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2078 [Config] Saved to database: mode=paper, min_confidence=0.777, position_size=5.0
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.CONFIG_CHANGED to 0 subscribers
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2078 [Config] Saved to database: mode=paper, min_confidence=0.5, position_size=10.0
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.CONFIG_CHANGED to 0 subscribers
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2078 [Config] Saved to database: mode=paper, min_confidence=0.777, position_size=8.0
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.CONFIG_CHANGED to 0 subscribers
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2078 [Config] Saved to database: mode=paper, min_confidence=0.5, position_size=5.0
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.CONFIG_CHANGED to 0 subscribers
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2078 [Config] Saved to database: mode=paper, min_confidence=0.65, position_size=5.0
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.CONFIG_CHANGED to 0 subscribers
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2078 [Config] Saved to database: mode=paper, min_confidence=0.8, position_size=7.0
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.CONFIG_CHANGED to 0 subscribers
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2078 [Config] Saved to database: mode=paper, min_confidence=0.9, position_size=7.0
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.CONFIG_CHANGED to 0 subscribers
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/ "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/ "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/partial "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/partial "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
DEBUG    root:dashboard.py:92 [Dashboard] No trade_cycle job found in scheduler
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/status "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
DEBUG    root:dashboard.py:92 [Dashboard] No trade_cycle job found in scheduler
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/status "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
DEBUG    root:dashboard.py:92 [Dashboard] No trade_cycle job found in scheduler
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/status "HTTP/1.1 200 OK"
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:675 [Dashboard] Loaded 1 current signals from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/current "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:675 [Dashboard] Loaded 1 current signals from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/current "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:162 [Dashboard] Loaded 1 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:162 [Dashboard] Loaded 1 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
INFO     root:data_collector.py:79 [DataCollector] Updated 2 symbols
INFO     root:data_collector.py:79 [DataCollector] Updated 1 symbols
INFO     root:data_collector.py:79 [DataCollector] Updated 1 symbols
INFO     root:data_collector.py:79 [DataCollector] Updated 1 symbols
INFO     root:data_collector.py:79 [DataCollector] Updated 1 symbols
INFO     root:data_collector.py:79 [DataCollector] Updated 1 symbols
ERROR    root:error_tracker.py:78 [OPENAI] API key invalid
ERROR    root:error_tracker.py:78 [EXCHANGE] Validation failed
Traceback (most recent call last):
  File "/home/rcasteen/kraken-ai-bot/tests/test_error_tracker.py", line 55, in test_log_error_with_exception
    raise ValueError("Invalid value")
ValueError: Invalid value
ERROR    root:error_tracker.py:78 [RSS] Feed fetch failed
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [EXCHANGE] Error 2
ERROR    root:error_tracker.py:78 [RSS] Error 3
ERROR    root:error_tracker.py:78 [OPENAI] OpenAI error 1
ERROR    root:error_tracker.py:78 [EXCHANGE] Exchange error
ERROR    root:error_tracker.py:78 [OPENAI] OpenAI error 2
ERROR    root:error_tracker.py:78 [OPENAI] Minor issue
ERROR    root:error_tracker.py:78 [EXCHANGE] Major issue
ERROR    root:error_tracker.py:78 [RSS] Critical issue
ERROR    root:error_tracker.py:78 [TEST] Error 0
ERROR    root:error_tracker.py:78 [TEST] Error 1
ERROR    root:error_tracker.py:78 [TEST] Error 2
ERROR    root:error_tracker.py:78 [TEST] Error 3
ERROR    root:error_tracker.py:78 [TEST] Error 4
ERROR    root:error_tracker.py:78 [TEST] Error 5
ERROR    root:error_tracker.py:78 [TEST] Error 6
ERROR    root:error_tracker.py:78 [TEST] Error 7
ERROR    root:error_tracker.py:78 [TEST] Error 8
ERROR    root:error_tracker.py:78 [TEST] Error 9
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [OPENAI] Error 2
ERROR    root:error_tracker.py:78 [EXCHANGE] Error 3
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [OPENAI] Error 2
ERROR    root:error_tracker.py:78 [EXCHANGE] Error 3
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [OPENAI] Error 2
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [EXCHANGE] Error 2
ERROR    root:error_tracker.py:78 [RSS] Error 3
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [OPENAI] Error 2
ERROR    root:error_tracker.py:78 [EXCHANGE] Error 3
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [EXCHANGE] Error 2
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [EXCHANGE] Error 2
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [TEST] Error 0
ERROR    root:error_tracker.py:78 [TEST] Error 1
ERROR    root:error_tracker.py:78 [TEST] Error 2
ERROR    root:error_tracker.py:78 [TEST] Error 3
ERROR    root:error_tracker.py:78 [TEST] Error 4
ERROR    root:error_tracker.py:78 [TEST] Error 5
ERROR    root:error_tracker.py:78 [TEST] Error 6
ERROR    root:error_tracker.py:78 [TEST] Error 7
ERROR    root:error_tracker.py:78 [TEST] Error 8
ERROR    root:error_tracker.py:78 [TEST] Error 9
ERROR    root:error_tracker.py:78 [TEST] Error 10
ERROR    root:error_tracker.py:78 [TEST] Error 11
ERROR    root:error_tracker.py:78 [TEST] Error 12
ERROR    root:error_tracker.py:78 [TEST] Error 13
ERROR    root:error_tracker.py:78 [TEST] Error 14
ERROR    root:error_tracker.py:78 [OPENAI] Error 1
ERROR    root:error_tracker.py:78 [OPENAI] Error 2
ERROR    root:error_tracker.py:78 [EXCHANGE] Error 3
ERROR    root:error_tracker.py:78 [TEST] Error
ERROR    root:error_tracker.py:78 [OPENAI] Error
ERROR    root:error_tracker.py:78 [TEST] Test message
ERROR    root:error_tracker.py:78 [TEST] Error
ERROR    root:error_tracker.py:78 [TEST] Error
ERROR    root:error_tracker.py:78 [OPENAI] openai error 0
ERROR    root:error_tracker.py:78 [OPENAI] openai error 1
ERROR    root:error_tracker.py:78 [OPENAI] openai error 2
ERROR    root:error_tracker.py:78 [EXCHANGE] exchange error 0
ERROR    root:error_tracker.py:78 [EXCHANGE] exchange error 1
ERROR    root:error_tracker.py:78 [EXCHANGE] exchange error 2
ERROR    root:error_tracker.py:78 [RSS] rss error 0
ERROR    root:error_tracker.py:78 [RSS] rss error 1
ERROR    root:error_tracker.py:78 [RSS] rss error 2
ERROR    root:error_tracker.py:78 [DATABASE] database error 0
ERROR    root:error_tracker.py:78 [DATABASE] database error 1
ERROR    root:error_tracker.py:78 [DATABASE] database error 2
DEBUG    root:event_bus.py:46 [EventBus] Subscribed to EventType.TRADE_EXECUTED
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY BTCUSD | signal_id=None
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 1 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY BTCUSD
WARNING  root:telegram.py:21 [Telegram] Notifications disabled: Missing TELEGRAM_BOT_TOKEN or TELEGRAM_CHAT_ID
DEBUG    root:event_bus.py:46 [EventBus] Subscribed to EventType.SIGNAL_GENERATED
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: BUY (conf: 0.80) - Sentiment: Keyword match (positive): Bitcoin bullish
INFO     root:strategy_manager.py:141 [technical] BTCUSD: SELL (conf: 0.47) - Technical: SMA: HOLD, RSI: SELL, Momentum: SELL
INFO     root:strategy_manager.py:141 [volume] BTCUSD: BUY (conf: 0.20) - Volume: Normal volume | No clear volume-price pattern | OBV rising (accumulation)
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=BUY, actionable_weight=2.8, hold_weight=0, raw_score=0.9600000000000001
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.34)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 1 subscribers
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.34 below threshold 0.5, converting to HOLD
DEBUG    root:event_bus.py:46 [EventBus] Subscribed to EventType.CONFIG_CHANGED
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2078 [Config] Saved to database: mode=paper, min_confidence=0.5, position_size=5.0
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.CONFIG_CHANGED to 1 subscribers
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config "HTTP/1.1 200 OK"
DEBUG    root:event_bus.py:46 [EventBus] Subscribed to EventType.BALANCE_UPDATED
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:467 [Balance] Balance update requested: $15000.00
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.BALANCE_UPDATED to 1 subscribers
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/config/balance "HTTP/1.1 200 OK"
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: BUY (conf: 0.80) - Sentiment: Keyword match (positive): Major cryptocurrency rally continues
INFO     root:strategy_manager.py:141 [technical] BTCUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=BUY, actionable_weight=1.0, hold_weight=1.8, raw_score=0.8
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.80)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY BTCUSD | signal_id=1
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY BTCUSD
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:64 [Dashboard] Loaded 1 trades from database
INFO     root:dashboard.py:64 [Dashboard] Loaded 1 trades from database
INFO     root:dashboard.py:242 [PnL] Labels: ['BTCUSD']
INFO     root:dashboard.py:243 [PnL] Data: [0.0]
INFO     root:dashboard.py:64 [Dashboard] Loaded 1 trades from database
INFO     root:dashboard.py:242 [PnL] Labels: ['BTCUSD']
INFO     root:dashboard.py:243 [PnL] Data: [0.0]
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/partial "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/partial "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: PUT http://testserver/api/feeds/1 "HTTP/1.1 404 Not Found"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2140 [Feeds] Updated feed ID 1 (Test Updated Name)
INFO     httpx:_client.py:1025 HTTP Request: PUT http://testserver/api/feeds/1 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:162 [Dashboard] Loaded 1 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:162 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:162 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: PUT http://testserver/api/feeds/1/toggle "HTTP/1.1 404 Not Found"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2186 [Feeds] Toggled feed ID 1 (Test Feed): disabled
INFO     httpx:_client.py:1025 HTTP Request: PUT http://testserver/api/feeds/1/toggle "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:162 [Dashboard] Loaded 1 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: DELETE http://testserver/api/feeds/99999 "HTTP/1.1 404 Not Found"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: DELETE http://testserver/api/feeds/99999 "HTTP/1.1 404 Not Found"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:162 [Dashboard] Loaded 1 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1968 [Feeds] Deleted feed: Test Feed (ID: 1)
INFO     httpx:_client.py:1025 HTTP Request: DELETE http://testserver/api/feeds/1 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:162 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:2186 [Feeds] Toggled feed ID 1 (Test Feed): disabled
INFO     httpx:_client.py:1025 HTTP Request: PUT http://testserver/api/feeds/1/toggle "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1968 [Feeds] Deleted feed: Test Feed (ID: 1)
INFO     httpx:_client.py:1025 HTTP Request: DELETE http://testserver/api/feeds/1 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/errors "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/errors "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/errors?component=openai "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/errors?limit=1 "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/errors/clear "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/errors/clear?component=openai "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/openai "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/openai "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/openai "HTTP/1.1 500 Internal Server Error"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/kraken "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/kraken "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/rss "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/rss "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/health/detailed "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/health/detailed "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/errors "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/errors/clear?component=openai "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/errors "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/openai "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/errors?component=openai "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/openai "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: POST http://testserver/api/test/openai "HTTP/1.1 200 OK"
INFO     root:historical_data.py:79 [HistoricalData] Incremental fetch for BTCUSD since 2025-10-30 20:35:00
DEBUG    urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): api.kraken.com:443
DEBUG    urllib3.connectionpool:connectionpool.py:544 https://api.kraken.com:443 "GET /0/public/OHLC?pair=BTCUSD&interval=5&since=1761874500 HTTP/1.1" 200 None
INFO     root:historical_data.py:138 [HistoricalData] Cached 1 candles for BTCUSD (5m)
INFO     root:historical_data.py:86 [HistoricalData] Full fetch for INVALIDSYMBOL (1 days back)
DEBUG    urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): api.kraken.com:443
DEBUG    urllib3.connectionpool:connectionpool.py:544 https://api.kraken.com:443 "GET /0/public/OHLC?pair=INVALIDSYMBOL&interval=5 HTTP/1.1" 200 39
ERROR    root:kraken.py:90 [KrakenClient] OHLC error: ['EQuery:Unknown asset pair']
WARNING  root:historical_data.py:99 [HistoricalData] No data returned from Kraken for INVALIDSYMBOL
INFO     root:kraken.py:38 [KrakenClient] Balance API response keys: ['ZUSD']
INFO     root:kraken.py:39 [KrakenClient] Full balances: {'ZUSD': '10000.50'}
INFO     root:kraken.py:46 [KrakenClient] Found balance under key 'ZUSD': $10000.50
INFO     root:kraken.py:38 [KrakenClient] Balance API response keys: ['ZUSD']
INFO     root:kraken.py:39 [KrakenClient] Full balances: {'ZUSD': '1000'}
INFO     root:kraken.py:46 [KrakenClient] Found balance under key 'ZUSD': $1000.00
ERROR    root:kraken.py:55 [KrakenClient] Balance error: Auth error
INFO     root:kraken.py:38 [KrakenClient] Balance API response keys: ['ZUSD']
INFO     root:kraken.py:39 [KrakenClient] Full balances: {'ZUSD': '5000'}
INFO     root:risk_manager.py:68 [RiskManager] Position size: 0.000117 @ $50000.00 = $5.87 (capital: $195.50)
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — Positive sentiment detected
INFO     root:notifier.py:14 [ALERT] [ETH/USD] SELL @ 3000.0 — Negative news
INFO     root:notifier.py:14 [ALERT] [SOL/USD] HOLD @ 100.0 — Mixed sentiment
INFO     root:notifier.py:14 [ALERT] [?] BUY @ 50000.0 — Test
INFO     root:notifier.py:14 [ALERT] [BTC/USD] HOLD @ 50000.0 — Test
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 0 — Test
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — No reason.
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — Test
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — Test
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — Test
INFO     root:notifier.py:14 [ALERT] [BTC/USD] BUY @ 50000.0 — Buy signal
INFO     root:notifier.py:14 [ALERT] [ETH/USD] SELL @ 3000.0 — Sell signal
INFO     root:notifier.py:14 [ALERT] [SOL/USD] HOLD @ 100.0 — Hold signal
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy ETHUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy ETHUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, sell ETHUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: sell ETHUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, sell BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: sell BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, sell BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: sell BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, sell BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: sell BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy ETHUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy ETHUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, sell ETHUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: sell ETHUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, buy ETHUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy ETHUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY ETHUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY ETHUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, SELL ETHUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: SELL ETHUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, BUY ETHUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY ETHUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=3, SELL BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: SELL BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY BTCUSD
ERROR    root:paper_trader.py:278 [PaperTrader] Failed to save trade to database: Database connection failed
ERROR    root:paper_trader.py:135 [PaperTrader] Failed to update holdings in database: Database connection failed
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, SELL BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: SELL BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, sell BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: sell BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=3, sell BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: sell BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=3, sell BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: sell BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, buy ETHUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy ETHUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=3, buy BTCUSD | signal_id=None
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: buy BTCUSD
INFO     root:risk_manager.py:68 [RiskManager] Position size: 0.000120 @ $50000.00 = $6.00 (capital: $200.00)
INFO     root:risk_manager.py:76 [RiskManager] Updated - Daily P&L: $-11.00, Capital: $189.00
ERROR    root:risk_manager.py:46 [RiskManager] SHUTDOWN: Daily loss $11.00 exceeds limit $10.00
INFO     root:risk_manager.py:68 [RiskManager] Position size: 0.000117 @ $50000.00 = $5.87 (capital: $195.50)
INFO     root:risk_manager.py:68 [RiskManager] Position size: 0.000120 @ $50000.00 = $6.00 (capital: $200.00)
INFO     root:risk_manager.py:68 [RiskManager] Position size: 0.060000 @ $50000.00 = $3000.00 (capital: $100000.00)
ERROR    root:sentiment.py:273 [SentimentSignal] GPT error for BTC/USD: API timeout
ERROR    root:sentiment.py:273 [SentimentSignal] GPT error for BTC/USD: Could not extract JSON from response: invalid json
INFO     root:sentiment.py:304 [SentimentSignal] Sending 3 headlines for BTC/USD to GPT
INFO     root:sentiment.py:323 [SentimentSignal] BTC/USD consolidated signal: HOLD — Mixed sentiment
INFO     root:sentiment.py:304 [SentimentSignal] Sending 2 headlines for BTC/USD to GPT
ERROR    root:sentiment.py:327 [SentimentSignal] GPT error for BTC/USD: API error
INFO     root:sentiment.py:304 [SentimentSignal] Sending 3 headlines for BTC/USD to GPT
INFO     root:sentiment.py:323 [SentimentSignal] BTC/USD consolidated signal: BUY — Positive overall
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: BUY (conf: 0.80) - Sentiment: Keyword match (positive): Bitcoin surges to new all-time high
INFO     root:strategy_manager.py:141 [technical] BTCUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=BUY, actionable_weight=1.0, hold_weight=1.8, raw_score=0.8
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.80)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: BUY (conf: 0.80) - Sentiment: Keyword match (positive): Bitcoin surges past resistance levels
INFO     root:strategy_manager.py:141 [technical] BTCUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=BUY, actionable_weight=1.0, hold_weight=1.8, raw_score=0.8
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.80)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY BTCUSD | signal_id=1
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY BTCUSD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a7b92eb9-7a4b-46b3-ab4c-332104922bdb', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Ethereum breaks resistance" and the crypto symbol ETHUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea68efbf0>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x784ea65cfed0> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea6541880>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 30 Oct 2025 20:39:35 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'766'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'788'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'199924'), (b'x-ratelimit-reset-requests', b'10.746s'), (b'x-ratelimit-reset-tokens', b'22ms'), (b'x-request-id', b'req_efb1ae5969bf40e38b4b7ef4cec858ae'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=rF4y2MV.mPkyMdx4jH4_XuMGUxS3i3RWj_jgPwUcI2Y-1761856775-1.0.1.1-dkLG3UfQWV8HyJc2Zj0owaoWMC9LHixLvxdfzrjv8PTbdU69AE_lSCaQeXaWEH2znrriLx2NV2CB4AhPVbMoZZkUZxyXUZD05qFNmyWyZoY; path=/; expires=Thu, 30-Oct-25 21:09:35 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=B3ZuAfpXqY2HjeWEmZjQMscTNc4cHAQlLVbgXwgqy7s-1761856775347-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'996db908992572f8-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Thu, 30 Oct 2025 20:39:35 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '766'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '788'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9998'), ('x-ratelimit-remaining-tokens', '199924'), ('x-ratelimit-reset-requests', '10.746s'), ('x-ratelimit-reset-tokens', '22ms'), ('x-request-id', 'req_efb1ae5969bf40e38b4b7ef4cec858ae'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=rF4y2MV.mPkyMdx4jH4_XuMGUxS3i3RWj_jgPwUcI2Y-1761856775-1.0.1.1-dkLG3UfQWV8HyJc2Zj0owaoWMC9LHixLvxdfzrjv8PTbdU69AE_lSCaQeXaWEH2znrriLx2NV2CB4AhPVbMoZZkUZxyXUZD05qFNmyWyZoY; path=/; expires=Thu, 30-Oct-25 21:09:35 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=B3ZuAfpXqY2HjeWEmZjQMscTNc4cHAQlLVbgXwgqy7s-1761856775347-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '996db908992572f8-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_efb1ae5969bf40e38b4b7ef4cec858ae
INFO     root:strategy_manager.py:141 [sentiment] ETHUSD: BUY (conf: 0.80) - Sentiment: Breaking resistance typically indicates bullish momentum, suggesting potential for price increase.
INFO     root:strategy_manager.py:141 [technical] ETHUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] ETHUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=BUY, actionable_weight=1.0, hold_weight=1.8, raw_score=0.8
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for ETHUSD: BUY (conf: 0.80)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY ETHUSD | signal_id=1
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY ETHUSD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: custom
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: custom
INFO     root:strategy_manager.py:73 [StrategyManager] Removed strategy: custom
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: test
INFO     root:strategy_manager.py:89 [StrategyManager] Disabled strategy: test
INFO     root:strategy_manager.py:80 [StrategyManager] Enabled strategy: test
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s1
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s2
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s3
INFO     root:strategy_manager.py:141 [s1] BTCUSD: BUY (conf: 0.80) - s1 signal
INFO     root:strategy_manager.py:141 [s2] BTCUSD: BUY (conf: 0.70) - s2 signal
INFO     root:strategy_manager.py:141 [s3] BTCUSD: BUY (conf: 0.90) - s3 signal
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=BUY, actionable_weight=3.0, hold_weight=0, raw_score=2.4
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.80)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s1
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s2
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s3
INFO     root:strategy_manager.py:141 [s1] BTCUSD: BUY (conf: 0.80) - s1 signal
INFO     root:strategy_manager.py:141 [s2] BTCUSD: SELL (conf: 0.70) - s2 signal
INFO     root:strategy_manager.py:141 [s3] BTCUSD: BUY (conf: 0.90) - s3 signal
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=BUY, actionable_weight=3.0, hold_weight=0, raw_score=1.7000000000000002
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.57)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s1
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s2
INFO     root:strategy_manager.py:141 [s1] BTCUSD: BUY (conf: 0.50) - s1 signal
INFO     root:strategy_manager.py:141 [s2] BTCUSD: BUY (conf: 0.40) - s2 signal
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=BUY, actionable_weight=2.0, hold_weight=0, raw_score=0.9
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.45)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.45 below threshold 0.7, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s1
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s2
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s3
INFO     root:strategy_manager.py:141 [s1] BTCUSD: BUY (conf: 0.60) - s1 signal
INFO     root:strategy_manager.py:141 [s2] BTCUSD: SELL (conf: 0.90) - s2 signal
INFO     root:strategy_manager.py:141 [s3] BTCUSD: HOLD (conf: 0.50) - s3 signal
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: SELL (conf: 0.90)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s1
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s2
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s3
INFO     root:strategy_manager.py:141 [s1] BTCUSD: BUY (conf: 0.70) - s1 signal
INFO     root:strategy_manager.py:141 [s2] BTCUSD: BUY (conf: 0.80) - s2 signal
INFO     root:strategy_manager.py:141 [s3] BTCUSD: BUY (conf: 0.90) - s3 signal
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.80)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s1
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s2
INFO     root:strategy_manager.py:68 [StrategyManager] Added strategy: s3
INFO     root:strategy_manager.py:141 [s1] BTCUSD: BUY (conf: 0.80) - s1 signal
INFO     root:strategy_manager.py:141 [s2] BTCUSD: SELL (conf: 0.70) - s2 signal
INFO     root:strategy_manager.py:141 [s3] BTCUSD: BUY (conf: 0.90) - s3 signal
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: HOLD (conf: 0.30)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.30 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:386 [StrategyManager] Configuration updated
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to tests/test_logs/strategy_signals.jsonl
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1d33151f-b072-4881-8ab0-de656382428d', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test headline" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea6716ea0>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x784ea670ded0> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea6716ba0>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 30 Oct 2025 20:39:36 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'560'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'575'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9987'), (b'x-ratelimit-remaining-tokens', b'199927'), (b'x-ratelimit-reset-requests', b'1m44.492s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_c9b20a7c209844389fc9bad726b1acdf'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=StLixbpI1DpabqV9JIiTA_ueMpKlrXR1N7PMpfYLhX4-1761856776-1.0.1.1-Tg.xJCkryI0WiJgJ9oPsWHevkyOmNgbtclmJSlo86IgW4LtaR0lF0dMrbUwGGAbFbtIOWqLGliYroDj.HNvVZYyWESjjmdQyzw6nBTZJjO8; path=/; expires=Thu, 30-Oct-25 21:09:36 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=4YIGx7tnC1zIiwcon12SUobHLYZHIXM8.2mzDF51RGY-1761856776438-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'996db910abe42c9e-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Thu, 30 Oct 2025 20:39:36 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '560'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '575'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9987'), ('x-ratelimit-remaining-tokens', '199927'), ('x-ratelimit-reset-requests', '1m44.492s'), ('x-ratelimit-reset-tokens', '21ms'), ('x-request-id', 'req_c9b20a7c209844389fc9bad726b1acdf'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=StLixbpI1DpabqV9JIiTA_ueMpKlrXR1N7PMpfYLhX4-1761856776-1.0.1.1-Tg.xJCkryI0WiJgJ9oPsWHevkyOmNgbtclmJSlo86IgW4LtaR0lF0dMrbUwGGAbFbtIOWqLGliYroDj.HNvVZYyWESjjmdQyzw6nBTZJjO8; path=/; expires=Thu, 30-Oct-25 21:09:36 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=4YIGx7tnC1zIiwcon12SUobHLYZHIXM8.2mzDF51RGY-1761856776438-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '996db910abe42c9e-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_c9b20a7c209844389fc9bad726b1acdf
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: HOLD (conf: 0.30) - Sentiment: No significant news or trend indicated to warrant a change in position.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=0, hold_weight=2.8, raw_score=0.84
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: HOLD (conf: 0.30)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.30 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to tests/test_logs/strategy_signals.jsonl
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-93678f20-386e-4ccf-ae07-daaf63334ad7', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test headline" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea66f4a40>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x784ea670e350> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea66f4740>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 30 Oct 2025 20:39:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'482'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'498'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9987'), (b'x-ratelimit-remaining-tokens', b'199927'), (b'x-ratelimit-reset-requests', b'1m52.202s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_cd5c2646253c44fcaf9ec1e1d5487bec'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=w.y4nHtc4UZqb1yQ89RUuyz93rLWMT2eZ2c3.qjq4fo-1761856777-1.0.1.1-821tCsQwRLOJfdjl6r4ybNkMy85JilaZE5x9GbFKtKlsu4x32tETV7jiGpjaY5M7wHQrdhXmFn5PQv.eIjU3woxTD0rY2sCJgjmTha9HYwg; path=/; expires=Thu, 30-Oct-25 21:09:37 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=zhz6avxwsANzZwXDkeOFXsDdDFVIIMsxhYbHzU80NtE-1761856777269-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'996db91669f33ace-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Thu, 30 Oct 2025 20:39:37 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '482'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '498'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9987'), ('x-ratelimit-remaining-tokens', '199927'), ('x-ratelimit-reset-requests', '1m52.202s'), ('x-ratelimit-reset-tokens', '21ms'), ('x-request-id', 'req_cd5c2646253c44fcaf9ec1e1d5487bec'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=w.y4nHtc4UZqb1yQ89RUuyz93rLWMT2eZ2c3.qjq4fo-1761856777-1.0.1.1-821tCsQwRLOJfdjl6r4ybNkMy85JilaZE5x9GbFKtKlsu4x32tETV7jiGpjaY5M7wHQrdhXmFn5PQv.eIjU3woxTD0rY2sCJgjmTha9HYwg; path=/; expires=Thu, 30-Oct-25 21:09:37 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=zhz6avxwsANzZwXDkeOFXsDdDFVIIMsxhYbHzU80NtE-1761856777269-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '996db91669f33ace-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_cd5c2646253c44fcaf9ec1e1d5487bec
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: HOLD (conf: 0.30) - Sentiment: No significant news or market movement indicated.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=0, hold_weight=2.8, raw_score=0.84
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: HOLD (conf: 0.30)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.30 below threshold 0.5, converting to HOLD
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-42954ae7-d1f7-4b89-8dd9-0d4bdba992d0', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test headline" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 30 Oct 2025 20:39:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'755'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'783'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9987'), (b'x-ratelimit-remaining-tokens', b'199927'), (b'x-ratelimit-reset-requests', b'1m51.612s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_6ff83efd587f9ba6b8c2a03d33da8549'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'996db91a2e2d3ace-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 30 Oct 2025 20:39:38 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '755', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '783', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9987', 'x-ratelimit-remaining-tokens': '199927', 'x-ratelimit-reset-requests': '1m51.612s', 'x-ratelimit-reset-tokens': '21ms', 'x-request-id': 'req_6ff83efd587f9ba6b8c2a03d33da8549', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '996db91a2e2d3ace-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_6ff83efd587f9ba6b8c2a03d33da8549
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: HOLD (conf: 0.30) - Sentiment: Market conditions are uncertain, and there is no strong indication for a significant price movement.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=0, hold_weight=2.8, raw_score=0.84
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: HOLD (conf: 0.30)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.30 below threshold 0.5, converting to HOLD
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-bbf97249-ee40-48da-b086-645df06465cf', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test headline" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 30 Oct 2025 20:39:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'641'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'663'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9985'), (b'x-ratelimit-remaining-tokens', b'199927'), (b'x-ratelimit-reset-requests', b'2m7.944s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_9ac2ae81f1e844dabb58fd2e333ef4fe'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'996db9202d553ace-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 30 Oct 2025 20:39:38 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '641', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '663', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9985', 'x-ratelimit-remaining-tokens': '199927', 'x-ratelimit-reset-requests': '2m7.944s', 'x-ratelimit-reset-tokens': '21ms', 'x-request-id': 'req_9ac2ae81f1e844dabb58fd2e333ef4fe', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '996db9202d553ace-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_9ac2ae81f1e844dabb58fd2e333ef4fe
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: HOLD (conf: 0.30) - Sentiment: Market conditions are uncertain and no significant news indicates a clear direction.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=0, hold_weight=2.8, raw_score=0.84
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: HOLD (conf: 0.30)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.30 below threshold 0.5, converting to HOLD
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-12869269-bcf8-42f3-812d-d45ad000e089', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test headline" and the crypto symbol ETHUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 30 Oct 2025 20:39:39 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'814'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'830'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9985'), (b'x-ratelimit-remaining-tokens', b'199927'), (b'x-ratelimit-reset-requests', b'2m7.12s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_7180a73f86a3488983b0186055e652f5'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'996db9253b5c3ace-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 30 Oct 2025 20:39:39 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '814', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '830', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9985', 'x-ratelimit-remaining-tokens': '199927', 'x-ratelimit-reset-requests': '2m7.12s', 'x-ratelimit-reset-tokens': '21ms', 'x-request-id': 'req_7180a73f86a3488983b0186055e652f5', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '996db9253b5c3ace-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_7180a73f86a3488983b0186055e652f5
INFO     root:strategy_manager.py:141 [sentiment] ETHUSD: HOLD (conf: 0.30) - Sentiment: Market conditions are uncertain, and there are no strong indicators for a significant price movement.
INFO     root:strategy_manager.py:141 [technical] ETHUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] ETHUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=0, hold_weight=2.8, raw_score=0.84
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for ETHUSD: HOLD (conf: 0.30)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.30 below threshold 0.5, converting to HOLD
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-01f7fba1-8213-4352-9213-1fff918de2ee', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test headline" and the crypto symbol ETHUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 30 Oct 2025 20:39:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'848'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'862'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9983'), (b'x-ratelimit-remaining-tokens', b'199927'), (b'x-ratelimit-reset-requests', b'2m23.457s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_1e568d5e02954225a6926c490701d40f'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'996db92b1a233ace-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 30 Oct 2025 20:39:40 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '848', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '862', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9983', 'x-ratelimit-remaining-tokens': '199927', 'x-ratelimit-reset-requests': '2m23.457s', 'x-ratelimit-reset-tokens': '21ms', 'x-request-id': 'req_1e568d5e02954225a6926c490701d40f', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '996db92b1a233ace-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_1e568d5e02954225a6926c490701d40f
INFO     root:strategy_manager.py:141 [sentiment] ETHUSD: HOLD (conf: 0.30) - Sentiment: Market conditions are uncertain, and there is no strong indication for a significant price movement.
INFO     root:strategy_manager.py:141 [technical] ETHUSD: HOLD (conf: 0.30) - Insufficient price history for technical analysis
INFO     root:strategy_manager.py:141 [volume] ETHUSD: HOLD (conf: 0.30) - Insufficient volume history for analysis
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=0, hold_weight=2.8, raw_score=0.84
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for ETHUSD: HOLD (conf: 0.30)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.30 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: BUY (conf: 0.60) - Sentiment: Keyword match (positive): Bitcoin adoption growing
INFO     root:strategy_manager.py:141 [technical] BTCUSD: SELL (conf: 0.47) - Technical: SMA: HOLD, RSI: SELL, Momentum: SELL
INFO     root:strategy_manager.py:141 [volume] BTCUSD: BUY (conf: 0.20) - Volume: Normal volume | No clear volume-price pattern | OBV rising (accumulation)
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=BUY, actionable_weight=2.8, hold_weight=0, raw_score=0.76
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.27)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.27 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: BUY (conf: 0.80) - Sentiment: Keyword match (positive): Bitcoin bullish
INFO     root:strategy_manager.py:141 [technical] BTCUSD: SELL (conf: 0.47) - Technical: SMA: HOLD, RSI: SELL, Momentum: SELL
INFO     root:strategy_manager.py:141 [volume] BTCUSD: BUY (conf: 0.20) - Volume: Normal volume | No clear volume-price pattern | OBV rising (accumulation)
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=BUY, actionable_weight=2.8, hold_weight=0, raw_score=0.9600000000000001
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.34)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.34 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-3e09a20a-48f7-49c1-99f3-88f55571c826', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test headline" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea66f6ed0>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x784ea670d950> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea66f74d0>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 30 Oct 2025 20:39:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'1075'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1108'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9982'), (b'x-ratelimit-remaining-tokens', b'199927'), (b'x-ratelimit-reset-requests', b'2m30.875s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_44bfaccfefe44d38a19de86ddf5584f8'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=katUixoiIS_D_z5RlrTqx.ZSwUs9Sx64tq1fqfo6aI4-1761856782-1.0.1.1-KGYhgU7C27VX4Yg_QAFPUGI.3Xj8svWaCa4kyjKYY0EIESJI5nf21m.V4ZIvb0rIh2WOUyMRw56pBxZSheq.tgY5BqPzt3MdrVjhPnv5shw; path=/; expires=Thu, 30-Oct-25 21:09:42 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=IBQ4c.ubBr8kzOZC8hKhdVooaYvQhUYbKwFVVsW1wlw-1761856782416-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'996db932ad826806-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Thu, 30 Oct 2025 20:39:42 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '1075'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1108'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9982'), ('x-ratelimit-remaining-tokens', '199927'), ('x-ratelimit-reset-requests', '2m30.875s'), ('x-ratelimit-reset-tokens', '21ms'), ('x-request-id', 'req_44bfaccfefe44d38a19de86ddf5584f8'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=katUixoiIS_D_z5RlrTqx.ZSwUs9Sx64tq1fqfo6aI4-1761856782-1.0.1.1-KGYhgU7C27VX4Yg_QAFPUGI.3Xj8svWaCa4kyjKYY0EIESJI5nf21m.V4ZIvb0rIh2WOUyMRw56pBxZSheq.tgY5BqPzt3MdrVjhPnv5shw; path=/; expires=Thu, 30-Oct-25 21:09:42 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=IBQ4c.ubBr8kzOZC8hKhdVooaYvQhUYbKwFVVsW1wlw-1761856782416-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '996db932ad826806-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_44bfaccfefe44d38a19de86ddf5584f8
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: HOLD (conf: 0.30) - Sentiment: Market conditions are uncertain, and there is no strong indication for a significant price movement.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: SELL (conf: 0.27) - Technical: SMA: HOLD, RSI: SELL, Momentum: HOLD
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.30) - Volume: Normal volume | No clear volume-price pattern | OBV neutral
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=1.0, hold_weight=1.8, raw_score=0.54
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: HOLD (conf: 0.19)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.19 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
WARNING  root:strategy_manager.py:119 [StrategyManager] Unknown symbol format: SYMBOL0/USD, using as-is
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a06b67e8-1eed-4511-81c7-6e8ca4f03162', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test" and the crypto symbol SYMBOL0/USD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea6716e70>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x784ea670cd50> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea66f46e0>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 30 Oct 2025 20:39:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'794'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'855'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9981'), (b'x-ratelimit-remaining-tokens', b'199928'), (b'x-ratelimit-reset-requests', b'2m38.077s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_092acfa4a15c44b7b2a1ff5d813f743e'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=Q_ZyoGz1fYrLk_0KLo28qXlKEJXdPF3dVbxFPnYTHJ4-1761856783-1.0.1.1-1GjdZW5PmNeV.xZjznmd120mpDdqGGiiaEEmtabCd0CMXn2RVKTYBNhh1T3o4rZr2Kzx9oyq6TUmQOstcRAux0rRsboN3KLIebm3s5WhAHU; path=/; expires=Thu, 30-Oct-25 21:09:43 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=c14Ay0Mco7sWJoBi3uD18B70eCufbapSWLCg.qfTyp4-1761856783606-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'996db93b3a117a97-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Thu, 30 Oct 2025 20:39:43 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '794'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '855'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9981'), ('x-ratelimit-remaining-tokens', '199928'), ('x-ratelimit-reset-requests', '2m38.077s'), ('x-ratelimit-reset-tokens', '21ms'), ('x-request-id', 'req_092acfa4a15c44b7b2a1ff5d813f743e'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=Q_ZyoGz1fYrLk_0KLo28qXlKEJXdPF3dVbxFPnYTHJ4-1761856783-1.0.1.1-1GjdZW5PmNeV.xZjznmd120mpDdqGGiiaEEmtabCd0CMXn2RVKTYBNhh1T3o4rZr2Kzx9oyq6TUmQOstcRAux0rRsboN3KLIebm3s5WhAHU; path=/; expires=Thu, 30-Oct-25 21:09:43 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=c14Ay0Mco7sWJoBi3uD18B70eCufbapSWLCg.qfTyp4-1761856783606-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '996db93b3a117a97-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_092acfa4a15c44b7b2a1ff5d813f743e
INFO     root:strategy_manager.py:141 [sentiment] SYMBOL0/USD: HOLD (conf: 0.30) - Sentiment: Insufficient information to determine a clear trend or sentiment.
INFO     root:strategy_manager.py:141 [technical] SYMBOL0/USD: SELL (conf: 0.27) - Technical: SMA: HOLD, RSI: SELL, Momentum: HOLD
INFO     root:strategy_manager.py:141 [volume] SYMBOL0/USD: HOLD (conf: 0.30) - Volume: Normal volume | No clear volume-price pattern | OBV neutral
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=1.0, hold_weight=1.8, raw_score=0.54
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for SYMBOL0/USD: HOLD (conf: 0.19)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.19 below threshold 0.5, converting to HOLD
WARNING  root:strategy_manager.py:119 [StrategyManager] Unknown symbol format: SYMBOL1/USD, using as-is
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-0822c801-9536-4860-944c-a9210619351f', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test" and the crypto symbol SYMBOL1/USD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 30 Oct 2025 20:39:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'715'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'728'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9981'), (b'x-ratelimit-remaining-tokens', b'199928'), (b'x-ratelimit-reset-requests', b'2m37.137s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_4e48437cf23c4bd7b4564bbfc8db41eb'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'996db941cd557a97-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 30 Oct 2025 20:39:44 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '715', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '728', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9981', 'x-ratelimit-remaining-tokens': '199928', 'x-ratelimit-reset-requests': '2m37.137s', 'x-ratelimit-reset-tokens': '21ms', 'x-request-id': 'req_4e48437cf23c4bd7b4564bbfc8db41eb', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '996db941cd557a97-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_4e48437cf23c4bd7b4564bbfc8db41eb
INFO     root:strategy_manager.py:141 [sentiment] SYMBOL1/USD: HOLD (conf: 0.30) - Sentiment: Insufficient information to determine a clear trend or signal.
INFO     root:strategy_manager.py:141 [technical] SYMBOL1/USD: SELL (conf: 0.27) - Technical: SMA: HOLD, RSI: SELL, Momentum: HOLD
INFO     root:strategy_manager.py:141 [volume] SYMBOL1/USD: HOLD (conf: 0.30) - Volume: Normal volume | No clear volume-price pattern | OBV neutral
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=1.0, hold_weight=1.8, raw_score=0.54
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for SYMBOL1/USD: HOLD (conf: 0.19)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.19 below threshold 0.5, converting to HOLD
WARNING  root:strategy_manager.py:119 [StrategyManager] Unknown symbol format: SYMBOL2/USD, using as-is
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-3c4fe7bb-8d59-4176-9753-7e3928b8bc8e', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test" and the crypto symbol SYMBOL2/USD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 30 Oct 2025 20:39:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'597'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'615'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9980'), (b'x-ratelimit-remaining-tokens', b'199928'), (b'x-ratelimit-reset-requests', b'2m44.968s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_6d4219278ecc475e81129283edcf682e'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'996db946b9cf7a97-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 30 Oct 2025 20:39:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '597', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '615', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9980', 'x-ratelimit-remaining-tokens': '199928', 'x-ratelimit-reset-requests': '2m44.968s', 'x-ratelimit-reset-tokens': '21ms', 'x-request-id': 'req_6d4219278ecc475e81129283edcf682e', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '996db946b9cf7a97-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_6d4219278ecc475e81129283edcf682e
INFO     root:strategy_manager.py:141 [sentiment] SYMBOL2/USD: HOLD (conf: 0.30) - Sentiment: Insufficient information to determine a clear market trend.
INFO     root:strategy_manager.py:141 [technical] SYMBOL2/USD: SELL (conf: 0.27) - Technical: SMA: HOLD, RSI: SELL, Momentum: HOLD
INFO     root:strategy_manager.py:141 [volume] SYMBOL2/USD: HOLD (conf: 0.30) - Volume: Normal volume | No clear volume-price pattern | OBV neutral
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=1.0, hold_weight=1.8, raw_score=0.54
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for SYMBOL2/USD: HOLD (conf: 0.19)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.19 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-8b96de51-7c84-4d89-8927-02b165a3dcf4', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Bitcoin positive news" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea67148c0>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x784ea670e250> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea67142c0>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 30 Oct 2025 20:39:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'888'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'934'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9980'), (b'x-ratelimit-remaining-tokens', b'199925'), (b'x-ratelimit-reset-requests', b'2m52.68s'), (b'x-ratelimit-reset-tokens', b'22ms'), (b'x-request-id', b'req_345542c2c072404e8839e17238bf5b9c'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=wEtLFIok73eTyQDbnNTvwJCosYl0fN7Wx5bPOeFkwS4-1761856786-1.0.1.1-_y8hPWtGPiMj.bmnOelOpmeM_bx1rdLy4D6iqUibLmd5Ufla9A3ONHDboRWjhHnxr_em5_Td10Jc9BeQPsngR8jjwoIKk2LnreQEW01jVis; path=/; expires=Thu, 30-Oct-25 21:09:46 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=UZwxN5CfLDxPUuPHdanV9o8HkE1O9wVkFvuPsPmOUM4-1761856786346-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'996db94c5b7563b9-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Thu, 30 Oct 2025 20:39:46 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '888'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '934'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9980'), ('x-ratelimit-remaining-tokens', '199925'), ('x-ratelimit-reset-requests', '2m52.68s'), ('x-ratelimit-reset-tokens', '22ms'), ('x-request-id', 'req_345542c2c072404e8839e17238bf5b9c'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=wEtLFIok73eTyQDbnNTvwJCosYl0fN7Wx5bPOeFkwS4-1761856786-1.0.1.1-_y8hPWtGPiMj.bmnOelOpmeM_bx1rdLy4D6iqUibLmd5Ufla9A3ONHDboRWjhHnxr_em5_Td10Jc9BeQPsngR8jjwoIKk2LnreQEW01jVis; path=/; expires=Thu, 30-Oct-25 21:09:46 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=UZwxN5CfLDxPUuPHdanV9o8HkE1O9wVkFvuPsPmOUM4-1761856786346-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '996db94c5b7563b9-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_345542c2c072404e8839e17238bf5b9c
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: BUY (conf: 0.60) - Sentiment: Positive news typically boosts market sentiment, leading to potential price increases.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: SELL (conf: 0.47) - Technical: SMA: HOLD, RSI: SELL, Momentum: SELL
INFO     root:strategy_manager.py:141 [volume] BTCUSD: BUY (conf: 0.20) - Volume: Normal volume | No clear volume-price pattern | OBV rising (accumulation)
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=BUY, actionable_weight=2.8, hold_weight=0, raw_score=0.76
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.27)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.27 below threshold 0.5, converting to HOLD
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-61c0b1f1-d82b-48a5-b7ae-5f76aedac90f', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Bitcoin positive news" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 30 Oct 2025 20:39:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'652'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'666'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9979'), (b'x-ratelimit-remaining-tokens', b'199925'), (b'x-ratelimit-reset-requests', b'3m0.1s'), (b'x-ratelimit-reset-tokens', b'22ms'), (b'x-request-id', b'req_0e1d8348d9c1439a8f7931692e2442ba'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'996db9541f5763b9-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 30 Oct 2025 20:39:47 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '652', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '666', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9979', 'x-ratelimit-remaining-tokens': '199925', 'x-ratelimit-reset-requests': '3m0.1s', 'x-ratelimit-reset-tokens': '22ms', 'x-request-id': 'req_0e1d8348d9c1439a8f7931692e2442ba', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '996db9541f5763b9-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_0e1d8348d9c1439a8f7931692e2442ba
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: BUY (conf: 0.60) - Sentiment: Positive news typically boosts market sentiment, leading to potential price increases.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: SELL (conf: 0.47) - Technical: SMA: HOLD, RSI: SELL, Momentum: SELL
INFO     root:strategy_manager.py:141 [volume] BTCUSD: BUY (conf: 0.20) - Volume: Normal volume | No clear volume-price pattern | OBV rising (accumulation)
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=BUY, actionable_weight=2.8, hold_weight=0, raw_score=0.76
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.27)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.27 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
WARNING  root:strategy_manager.py:247 ⚠️  Signal logging failed: Simulated logging failure
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-05c34412-05e9-4784-af57-0e3b472be9bf', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea66d1a60>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x784ea67355d0> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea66d1b20>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 30 Oct 2025 20:39:49 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'691'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'713'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9977'), (b'x-ratelimit-remaining-tokens', b'199930'), (b'x-ratelimit-reset-requests', b'3m15.53s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_0d57610d5acd4769ba440d432d14c57c'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=HOS2y5Yw3JKL_jxChM20MQ8KaIF4Mz6T1EpC_3C6o2E-1761856789-1.0.1.1-skUkzHhIrimBQTsu60IFDclv_dQG9BZXgvDynVAPaqR6aB06OR0daLMxn_Q9pqJdihx.3ws5CoWcyTChxS7xveEy5lLnoc9EqVP15C1oPfs; path=/; expires=Thu, 30-Oct-25 21:09:49 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=4NlzBlMD_tHWl3weToc1koivFauw4Xlt7.0LXpTe_sM-1761856789213-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'996db95fb910f0ae-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Thu, 30 Oct 2025 20:39:49 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '691'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '713'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9977'), ('x-ratelimit-remaining-tokens', '199930'), ('x-ratelimit-reset-requests', '3m15.53s'), ('x-ratelimit-reset-tokens', '21ms'), ('x-request-id', 'req_0d57610d5acd4769ba440d432d14c57c'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=HOS2y5Yw3JKL_jxChM20MQ8KaIF4Mz6T1EpC_3C6o2E-1761856789-1.0.1.1-skUkzHhIrimBQTsu60IFDclv_dQG9BZXgvDynVAPaqR6aB06OR0daLMxn_Q9pqJdihx.3ws5CoWcyTChxS7xveEy5lLnoc9EqVP15C1oPfs; path=/; expires=Thu, 30-Oct-25 21:09:49 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=4NlzBlMD_tHWl3weToc1koivFauw4Xlt7.0LXpTe_sM-1761856789213-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '996db95fb910f0ae-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_0d57610d5acd4769ba440d432d14c57c
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: HOLD (conf: 0.30) - Sentiment: Market conditions are uncertain and no significant news or trends indicate a clear direction.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: HOLD (conf: 0.00) - No price data available
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.00) - No volume data available
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=0, hold_weight=2.8, raw_score=0.3
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: HOLD (conf: 0.11)
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.11 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-3931d90b-3ab6-4aef-9eb9-7be2774907c7', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Bitcoin is rising" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea673cec0>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x784ea6734d50> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea673cb90>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 30 Oct 2025 20:39:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'618'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'632'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9975'), (b'x-ratelimit-remaining-tokens', b'199926'), (b'x-ratelimit-reset-requests', b'3m31.853s'), (b'x-ratelimit-reset-tokens', b'22ms'), (b'x-request-id', b'req_198fdb90428a4653b24eafc3f42f76ef'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=atP2B18Gg2J4pFJ5kQiZCgyi83G48GjBijmKcUVv.Ec-1761856790-1.0.1.1-cu6yLYCsX7TH1jK24RIerBv92HLCgSNbUvWWXfc9f08A7_ffKgXkyC.weB22OrBLAyNJJzcxBdStzCQX_0ul1PN_XT6_Z_TIfa5baSZFhRo; path=/; expires=Thu, 30-Oct-25 21:09:50 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=OnWZvtuS6h8Gf6Uo0QhBUfj96PMJJDCJP7.89Hl3WpI-1761856790072-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'996db965ad7b4f40-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Thu, 30 Oct 2025 20:39:50 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '618'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '632'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9975'), ('x-ratelimit-remaining-tokens', '199926'), ('x-ratelimit-reset-requests', '3m31.853s'), ('x-ratelimit-reset-tokens', '22ms'), ('x-request-id', 'req_198fdb90428a4653b24eafc3f42f76ef'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=atP2B18Gg2J4pFJ5kQiZCgyi83G48GjBijmKcUVv.Ec-1761856790-1.0.1.1-cu6yLYCsX7TH1jK24RIerBv92HLCgSNbUvWWXfc9f08A7_ffKgXkyC.weB22OrBLAyNJJzcxBdStzCQX_0ul1PN_XT6_Z_TIfa5baSZFhRo; path=/; expires=Thu, 30-Oct-25 21:09:50 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=OnWZvtuS6h8Gf6Uo0QhBUfj96PMJJDCJP7.89Hl3WpI-1761856790072-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '996db965ad7b4f40-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_198fdb90428a4653b24eafc3f42f76ef
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: BUY (conf: 0.60) - Sentiment: The headline indicates a positive trend in Bitcoin's price, suggesting potential for profit.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: SELL (conf: 0.47) - Technical: SMA: HOLD, RSI: SELL, Momentum: SELL
INFO     root:strategy_manager.py:141 [volume] BTCUSD: BUY (conf: 0.20) - Volume: Normal volume | No clear volume-price pattern | OBV rising (accumulation)
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=BUY, actionable_weight=2.8, hold_weight=0, raw_score=0.76
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: BUY (conf: 0.27)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.27 below threshold 0.5, converting to HOLD
INFO     root:strategy_manager.py:41 [StrategyManager] Logging to data/strategy_signals.jsonl
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-cab9fcc9-e425-4d22-89c7-baeba7970f74', 'json_data': {'messages': [{'role': 'user', 'content': 'Given the headline: "Test" and the crypto symbol BTCUSD, determine the most appropriate trading signal from the options: BUY, HOLD, or SELL. Also explain briefly why. Your output should be a JSON object like: {"signal": "BUY", "reason": "High interest and positive news."}'}], 'model': 'gpt-4o-mini', 'max_tokens': 100, 'temperature': 0.2}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea66d2fc0>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x784ea67356d0> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea66d32c0>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 30 Oct 2025 20:39:51 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'748'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'765'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9974'), (b'x-ratelimit-remaining-tokens', b'199930'), (b'x-ratelimit-reset-requests', b'3m39.648s'), (b'x-ratelimit-reset-tokens', b'21ms'), (b'x-request-id', b'req_7afad6c66272488aaf7b1f625543326e'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=x6_2inZnPDQ8ThXFmmJxioUjcZhla4dKy9EbmjmhkGQ-1761856791-1.0.1.1-Dl8VpctuXWOC6XomupENs1pqKHN29Xj8Wh5H9FkjD.49t7iCR3.QgEQipR_WgbXqnyiIt4ok90n_j_EqJmbtCCs5Xl99zbnT8YwoHYvyhyA; path=/; expires=Thu, 30-Oct-25 21:09:51 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=t92_l82qSJyAQeJYLvCYM1NToH8tYzdg6Inmlo_iiFM-1761856791078-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'996db96afed1f08a-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Thu, 30 Oct 2025 20:39:51 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '748'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '765'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9974'), ('x-ratelimit-remaining-tokens', '199930'), ('x-ratelimit-reset-requests', '3m39.648s'), ('x-ratelimit-reset-tokens', '21ms'), ('x-request-id', 'req_7afad6c66272488aaf7b1f625543326e'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=x6_2inZnPDQ8ThXFmmJxioUjcZhla4dKy9EbmjmhkGQ-1761856791-1.0.1.1-Dl8VpctuXWOC6XomupENs1pqKHN29Xj8Wh5H9FkjD.49t7iCR3.QgEQipR_WgbXqnyiIt4ok90n_j_EqJmbtCCs5Xl99zbnT8YwoHYvyhyA; path=/; expires=Thu, 30-Oct-25 21:09:51 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=t92_l82qSJyAQeJYLvCYM1NToH8tYzdg6Inmlo_iiFM-1761856791078-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '996db96afed1f08a-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_7afad6c66272488aaf7b1f625543326e
INFO     root:strategy_manager.py:141 [sentiment] BTCUSD: HOLD (conf: 0.30) - Sentiment: Market conditions are uncertain and no significant news suggests a clear direction.
INFO     root:strategy_manager.py:141 [technical] BTCUSD: SELL (conf: 0.27) - Technical: SMA: HOLD, RSI: SELL, Momentum: HOLD
INFO     root:strategy_manager.py:141 [volume] BTCUSD: HOLD (conf: 0.30) - Volume: Normal volume | No clear volume-price pattern | OBV neutral
INFO     root:strategy_manager.py:296 [StrategyManager] DEBUG: signal=HOLD, actionable_weight=1.0, hold_weight=1.8, raw_score=0.54
INFO     root:strategy_manager.py:171 [StrategyManager] Final signal for BTCUSD: HOLD (conf: 0.19)
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.SIGNAL_GENERATED to 0 subscribers
INFO     root:strategy_manager.py:251 [StrategyManager] Confidence 0.19 below threshold 0.5, converting to HOLD
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
ERROR    app.strategy_signal_logger:strategy_signal_logger.py:358 Failed to clear old signals from database: 'SignalRepository' object has no attribute 'get_all'
ERROR    app.strategy_signal_logger:strategy_signal_logger.py:358 Failed to clear old signals from database: 'SignalRepository' object has no attribute 'get_all'
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY LINKUSD | signal_id=1
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
DEBUG    httpcore.connection:_trace.py:47 close.started
DEBUG    httpcore.connection:_trace.py:47 close.complete
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY LINKUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=1, BUY ADAUSD | signal_id=1
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: BUY ADAUSD
INFO     root:paper_trader.py:229 [PaperTrader] Saved trade to database: ID=2, SELL ADAUSD | signal_id=2
DEBUG    root:event_bus.py:74 [EventBus] Emitting EventType.TRADE_EXECUTED to 0 subscribers
INFO     root:paper_trader.py:132 [PaperTrader] Updated holdings in database: SELL ADAUSD
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     root:dashboard.py:514 [Balance] Paper trading: $200.00 (P&L: $+0.00)
DEBUG    urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): api.kraken.com:443
DEBUG    urllib3.connectionpool:connectionpool.py:544 https://api.kraken.com:443 "POST /0/private/Balance HTTP/1.1" 200 41
INFO     root:kraken.py:38 [KrakenClient] Balance API response keys: ['ZUSD']
INFO     root:kraken.py:39 [KrakenClient] Full balances: {'ZUSD': '200.0000'}
INFO     root:dashboard.py:537 [Balance] Real Kraken balance: $200.00 (available for live trading)
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/balance "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/holdings "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/holdings "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/holdings "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/holdings "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/signals/latest "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/signals/latest "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/signals/latest "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1296 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/trades/all "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1296 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/trades/all "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1296 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/trades/all "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1296 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/trades/all "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1296 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/trades/all "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/holdings "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/holdings "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-76b9ad53-029e-438f-bdc3-7d1e4381c17f', 'json_data': {'messages': [{'role': 'user', 'content': 'test'}], 'model': 'gpt-3.5-turbo', 'max_tokens': 5}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG    httpcore.connection:_trace.py:47 connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea67a53d0>
DEBUG    httpcore.connection:_trace.py:47 start_tls.started ssl_context=<ssl.SSLContext object at 0x784ea6791050> server_hostname='api.openai.com' timeout=5.0
DEBUG    httpcore.connection:_trace.py:47 start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x784ea67a70e0>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 30 Oct 2025 20:39:53 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'170'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'194'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'199996'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_7c882fd8d99d418db6f4a1bc120e1a0f'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=uPp_HBlm4D5nt1K4ln6BwdWONg2sJunQGnE1m6VcAkY-1761856793-1.0.1.1-0GWNwvMicluH0HJ5JiVVz754_q8T0qwBckuwmzY_k8jDbsuA4kPxW2qGwyTcCoWHY3jhWgwnzx8tMiUSr.o2JbwgFJc3y5uO3WAf3iGYweI; path=/; expires=Thu, 30-Oct-25 21:09:53 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=ucP9.V0BZgsZp4dga05q2kLrrDAxznRKF_aCUDrPTy8-1761856793396-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'996db97cbbe72e17-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Thu, 30 Oct 2025 20:39:53 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'user-6mwxkngxge9likbrzlxbfa92'), ('openai-processing-ms', '170'), ('openai-project', 'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '194'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '200000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '199996'), ('x-ratelimit-reset-requests', '8.64s'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_7c882fd8d99d418db6f4a1bc120e1a0f'), ('x-openai-proxy-wasm', 'v0.1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=uPp_HBlm4D5nt1K4ln6BwdWONg2sJunQGnE1m6VcAkY-1761856793-1.0.1.1-0GWNwvMicluH0HJ5JiVVz754_q8T0qwBckuwmzY_k8jDbsuA4kPxW2qGwyTcCoWHY3jhWgwnzx8tMiUSr.o2JbwgFJc3y5uO3WAf3iGYweI; path=/; expires=Thu, 30-Oct-25 21:09:53 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=ucP9.V0BZgsZp4dga05q2kLrrDAxznRKF_aCUDrPTy8-1761856793396-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '996db97cbbe72e17-DFW'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_7c882fd8d99d418db6f4a1bc120e1a0f
DEBUG    urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): api.kraken.com:443
DEBUG    urllib3.connectionpool:connectionpool.py:544 https://api.kraken.com:443 "GET /0/public/Ticker?pair=BTCUSD HTTP/1.1" 200 None
INFO     root:dashboard.py:162 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/health "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-42923a71-70b8-46a7-8668-1e1110c2ddb9', 'json_data': {'messages': [{'role': 'user', 'content': 'test'}], 'model': 'gpt-3.5-turbo', 'max_tokens': 5}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 30 Oct 2025 20:39:54 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'391'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'413'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9998'), (b'x-ratelimit-remaining-tokens', b'199997'), (b'x-ratelimit-reset-requests', b'16.714s'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_965d3e7c8bc1419fa5883a6ed0e6e9e8'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'996db9807f7e2e17-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 30 Oct 2025 20:39:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '391', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '413', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9998', 'x-ratelimit-remaining-tokens': '199997', 'x-ratelimit-reset-requests': '16.714s', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_965d3e7c8bc1419fa5883a6ed0e6e9e8', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '996db9807f7e2e17-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_965d3e7c8bc1419fa5883a6ed0e6e9e8
DEBUG    urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): api.kraken.com:443
DEBUG    urllib3.connectionpool:connectionpool.py:544 https://api.kraken.com:443 "GET /0/public/Ticker?pair=BTCUSD HTTP/1.1" 200 None
INFO     root:dashboard.py:162 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/health/detailed "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:162 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:162 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:162 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1296 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/trades/all "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/holdings "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:64 [Dashboard] Loaded 0 trades from database
INFO     root:dashboard.py:514 [Balance] Paper trading: $200.00 (P&L: $+0.00)
DEBUG    urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): api.kraken.com:443
DEBUG    urllib3.connectionpool:connectionpool.py:544 https://api.kraken.com:443 "POST /0/private/Balance HTTP/1.1" 200 41
INFO     root:kraken.py:38 [KrakenClient] Balance API response keys: ['ZUSD']
INFO     root:kraken.py:39 [KrakenClient] Full balances: {'ZUSD': '200.0000'}
INFO     root:dashboard.py:537 [Balance] Real Kraken balance: $200.00 (available for live trading)
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/balance "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/holdings "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/strategy/signals/latest "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:1296 [Dashboard] Loaded 0 trades from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/trades/all "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
DEBUG    openai._base_client:_base_client.py:482 Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-05580070-0ff5-4a4d-b0c4-d966498fc689', 'json_data': {'messages': [{'role': 'user', 'content': 'test'}], 'model': 'gpt-3.5-turbo', 'max_tokens': 5}}
DEBUG    openai._base_client:_base_client.py:978 Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_headers.complete
DEBUG    httpcore.http11:_trace.py:47 send_request_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 send_request_body.complete
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Thu, 30 Oct 2025 20:39:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'user-6mwxkngxge9likbrzlxbfa92'), (b'openai-processing-ms', b'239'), (b'openai-project', b'proj_3jfjrR4jauJSvtuUZKgvj2Vp'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'260'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'200000'), (b'x-ratelimit-remaining-requests', b'9997'), (b'x-ratelimit-remaining-tokens', b'199997'), (b'x-ratelimit-reset-requests', b'24.004s'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_39cc42263e7b44e384d7831804d5e3c7'), (b'x-openai-proxy-wasm', b'v0.1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'996db988f8dc2e17-DFW'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO     httpx:_client.py:1025 HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.started request=<Request [b'POST']>
DEBUG    httpcore.http11:_trace.py:47 receive_response_body.complete
DEBUG    httpcore.http11:_trace.py:47 response_closed.started
DEBUG    httpcore.http11:_trace.py:47 response_closed.complete
DEBUG    openai._base_client:_base_client.py:1016 HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Thu, 30 Oct 2025 20:39:55 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'user-6mwxkngxge9likbrzlxbfa92', 'openai-processing-ms': '239', 'openai-project': 'proj_3jfjrR4jauJSvtuUZKgvj2Vp', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '260', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '200000', 'x-ratelimit-remaining-requests': '9997', 'x-ratelimit-remaining-tokens': '199997', 'x-ratelimit-reset-requests': '24.004s', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_39cc42263e7b44e384d7831804d5e3c7', 'x-openai-proxy-wasm': 'v0.1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '996db988f8dc2e17-DFW', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG    openai._base_client:_base_client.py:1024 request_id: req_39cc42263e7b44e384d7831804d5e3c7
DEBUG    urllib3.connectionpool:connectionpool.py:1049 Starting new HTTPS connection (1): api.kraken.com:443
DEBUG    urllib3.connectionpool:connectionpool.py:544 https://api.kraken.com:443 "GET /0/public/Ticker?pair=BTCUSD HTTP/1.1" 200 None
INFO     root:dashboard.py:162 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/health "HTTP/1.1 200 OK"
DEBUG    asyncio:selector_events.py:64 Using selector: EpollSelector
INFO     root:dashboard.py:162 [Dashboard] Loaded 0 RSS feeds from database
INFO     httpx:_client.py:1025 HTTP Request: GET http://testserver/api/feeds "HTTP/1.1 200 OK"
