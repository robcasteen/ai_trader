================================
FULL DASHBOARD DIAGNOSTIC
================================

1. CHECKING FILE STRUCTURE
----------------------------
src/static/js/dashboard.js
src/templates/dashboard.html
src/templates/partials/refreshable.html
src/templates/partials/_sentiment.html
src/templates/partials/_summary.html

2. CHECKING dashboard.js FUNCTIONS
-----------------------------------
All function definitions in dashboard.js:
13:function formatPrice(price) {
21:function formatTimeShort(timestamp) {
27:function formatTime(dateStr) {
50:function updateCountdown() {
76:function renderStatus() {
109:async function refreshStatus() {
127:async function runNow() {
160:function initPnLChart(labels, values) {
246:function renderSymbolsTable(summary) {
308:function renderSentiment(sentiment) {
378:function renderRecentTrades(trades) {
435:async function refreshBalance() {
470:async function refreshSummary() {
503:function setupRefreshButton() {
515:function setupRunNowButton() {
523:function initDashboard() {
559:async function loadFeedsDetailed() {
622:function showAddFeedModal() {
630:function closeAddFeedModal() {
644:async function addNewFeed() {
684:async function deleteFeed(feedUrl) {
711:async function testFeed(feedUrl) {
755:async function loadStrategies() {
804:async function loadHealth() {
841:async function loadPortfolio() {
900:async function loadStatus() {
923:function refreshData() {

Total functions: 27

3. CHECKING HTML INLINE SCRIPT
-------------------------------
Functions defined in dashboard.html inline script:
3:        function updateClock() {
11:        function switchTab(tabName) {

4. CHECKING WHAT initDashboard CALLS
-------------------------------------
function initDashboard() {
  console.log("üöÄ Initializing dashboard...");

  // Setup event listeners
  setupRunNowButton();
  setupRefreshButton();

  // Initial data load
  refreshStatus();
  refreshSummary();

  // Auto-refresh intervals
  setInterval(refreshSummary, 5000); // Refresh data every 5 seconds
  setInterval(refreshBalance, 5000);
  setInterval(refreshStatus, 5000); // Refresh status every 5 seconds
  setInterval(updateCountdown, 1000); // Update countdown every second

  console.log("‚úÖ Dashboard initialized");
}

5. CHECKING HTML ELEMENT IDs
-----------------------------
All id= attributes in dashboard.html:
id="add-feed-modal"
id="all-trade-count"
id="all-trades"
id="balance"
id="clock"
id="feed-count"
id="feed-list-detailed"
id="feeds"
id="gpt-status"
id="health"
id="health-grid"
id="kraken-status"
id="last-run"
id="new-feed-name"
id="new-feed-url"
id="next-run"
id="overview"
id="pnl-today"
id="recent-signals"
id="recent-trades"
id="run-now-btn"
id="signal-count"
id="status-dot"
id="status-msg"
id="status-text"
id="strategies"
id="strategy-signal-count"
id="strategy-signals"
id="total-trades"
id="trade-count"
id="trades"
id="win-rate"

6. CHECKING WHAT BROWSER RECEIVES
----------------------------------
Last 30 lines of dashboard.html (the script loading area):
                    <div class="health-status">--</div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Update clock
        function updateClock() {
            const now = new Date();
            document.getElementById('clock').textContent = now.toTimeString().split(' ')[0];
        }
        setInterval(updateClock, 1000);
        updateClock();

        // Tab switching
        function switchTab(tabName) {
            document.querySelectorAll('.tab-content').forEach(tab => tab.classList.remove('active'));
            document.querySelectorAll('.nav-tab').forEach(navTab => navTab.classList.remove('active'));
            document.getElementById(tabName).classList.add('active');
            if (tabName === 'feeds') loadFeedsDetailed();
            if (tabName === 'health') loadHealth();
            if (tabName === 'strategies') loadStrategies();
            event.target.classList.add('active');
        }
    </script>
    
    <script src="/static/js/dashboard.js"></script>
</body>
</html>

7. CHECKING ACTUAL API RESPONSES
---------------------------------
Testing /partial endpoint:
0
0

8. CHECKING WHAT refreshData() DOES
------------------------------------
function refreshData() {
    refreshBalance();
    loadPortfolio();
    loadStrategies();
    loadStatus();
    loadHealth();
}

console.log('‚úÖ Terminal dashboard functions loaded');

9. CHECKING BROWSER CONSOLE SIMULATION
---------------------------------------
If we loaded dashboard.js, these would be defined:
formatPrice
formatTimeShort
formatTime
updateCountdown
renderStatus
function
function
initPnLChart
renderSymbolsTable
renderSentiment
renderRecentTrades
function
function
setupRefreshButton
setupRunNowButton
initDashboard
function
showAddFeedModal
closeAddFeedModal
function
function
function
function
function
function
function
refreshData

10. FILE SIZES AND TIMESTAMPS
-----------------------------
-rw-rw-r-- 1 rcasteen rcasteen 29K Oct 15 12:56 src/static/js/dashboard.js
-rw-rw-r-- 1 rcasteen rcasteen 20K Oct 15 12:40 src/templates/dashboard.html

11. CHECKING FOR SYNTAX ERRORS
-------------------------------
./update.sh: line 69: node: command not found
Node not available, trying alternative...
‚úÖ formatPrice function exists
‚ùå formatTime defined multiple times
‚úÖ loadPortfolio exists

12. CHECKING NETWORK REQUESTS THE DASHBOARD MAKES
--------------------------------------------------
Functions that make fetch() calls:
111:    const resp = await fetch("/status");
137:    const resp = await fetch("/run-now");
437:    const resp = await fetch("/api/balance");
472:    const resp = await fetch("/partial");
561:    const response = await fetch("/api/feeds");
662:    const response = await fetch("/api/feeds", {
690:    const response = await fetch("/api/feeds", {
718:    const response = await fetch("/api/feeds/test", {
757:        const response = await fetch('/api/strategy/current');
806:        const response = await fetch('/api/health');
843:        const response = await fetch('/partial');
902:        const response = await fetch('/status');

13. WHAT HAPPENS ON PAGE LOAD
------------------------------
Code at end of dashboard.js (initialization):
        const nextRunEl = document.getElementById('next-run');
        if (nextRunEl) nextRunEl.textContent = status.next_run || '--';
        
        const statusMsgEl = document.getElementById('status-msg');
        if (statusMsgEl) statusMsgEl.textContent = status.message || '--';
    } catch (error) {
        console.error('Error loading status:', error);
    }
}

// Update refreshData to call all the functions
function refreshData() {
    refreshBalance();
    loadPortfolio();
    loadStrategies();
    loadStatus();
    loadHealth();
}

console.log('‚úÖ Terminal dashboard functions loaded');

================================
DIAGNOSTIC COMPLETE
================================

Save this output and share it!
